X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Sat, 30 Nov 2013 16:17:22 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Sat, 30 Nov 2013 16:17:22 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Victor Kane: Best = Free: Drupal Team Project Management tool based on latest Eclipse release (Kepler)
Content-Transfer-Encoding: 8bit
Content-Base: http://awebfactory.com.ar/node/510
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Victor Kane: Best = Free: Drupal Team Project Management tool based on latest Eclipse release (Kepler)</title>
    <base href="http://awebfactory.com.ar/node/510">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <!-- google_ad_section_start --><p><em>Second article in the Best = Free Drupal IDE series</em></p>
<p>This article follows last week's article <a href="http://awebfactory.com/node/509">Best = Free: Drupal IDE based on latest Eclipse release (Kepler)</a>, in which we established Eclipse as a premier Drupal IDE. This article demonstrates Eclipse (Kepler) as a Drupal Team Project Management tool also.</p>
<p>Our projects consist of deliverables, and our project deliverables live in repositories. Git repositories. For AWebFactory and a good number of developers and organizations, that means GitHub.</p>
<p>If you followed the first article in this series, you already have a powerful Drupal IDE to work on your Drupal based projects, both locally on your laptop or at your workstation, and remotely, directly on your server. In either case, assuming the code is cloned from a repository and incremental improvements and deliverables are pushed there, the version control cammands are often carried out in a terminal (inside of Eclipse, hopefully!) or else with a GUI of some kind, again, working with either local or remote cloned codebases.</p>
<p>Wouldn't it be great if these tasks could be carried out in the same IDE environment where the actual editing of the code takes place. And if that repo is on GitHub, and the IDE could integrate with GitHub issues (and even gists), our IDE would not only be capable of managing the codebase, it would be capable of managing the entire project and team also, via GitHub Issues 2 (<a href="https://github.com/blog/831-issues-2-0-the-next-generation" title="https://github.com/blog/831-issues-2-0-the-next-generation">https://github.com/blog/831-issues-2-0-the-next-generation</a>).</p>
<p>That's exactly what EGit and the GitHub Mylyn Connector can do. So we need to:</p>
<p>1. Install EGit</p>
<p>2. Install the GitHub Mylyn Connector</p>
<p>3. Start managing Drupal Team Projects and issue tracking right from your Kepler based Drupal IDE</p>
<!-- google_ad_section_end --><div class="og_rss_groups"></div><p><a href="http://awebfactory.com.ar/node/510" target="_blank">read more</a></p>
  </body>
</html>

