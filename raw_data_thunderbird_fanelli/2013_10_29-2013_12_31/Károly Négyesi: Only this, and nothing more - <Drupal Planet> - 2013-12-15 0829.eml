X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Sun, 15 Dec 2013 07:29:31 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Sun, 15 Dec 2013 07:29:31 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Károly Négyesi: Only this, and nothing more
Content-Transfer-Encoding: 8bit
Content-Base: http://www.drupal4hu.com/node/389
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Károly Négyesi: Only this, and nothing more</title>
    <base href="http://www.drupal4hu.com/node/389">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p>So I am writing a PHPUnit mock object, added ensure calls and I wanted to also ensure that no more method calls happens than the ones I ensured. This is done by the following snippet (the actual code does more with the expects call of course):<br />
<div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br />$schema </span><span style="color: #007700">= </span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">getMockBuilder</span><span style="color: #007700">(</span><span style="color: #DD0000">'Drupal\Core\Database\Schema'</span><span style="color: #007700">)<br />&nbsp; -&gt;</span><span style="color: #0000BB">disableOriginalConstructor</span><span style="color: #007700">()<br />&nbsp; -&gt;</span><span style="color: #0000BB">getMock</span><span style="color: #007700">();<br /></span><span style="color: #0000BB">$schema</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">expects</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">at</span><span style="color: #007700">(</span><span style="color: #0000BB">0</span><span style="color: #007700">))<br />&nbsp; -&gt;</span><span style="color: #0000BB">method</span><span style="color: #007700">(</span><span style="color: #DD0000">'tableExists'</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$schema</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">expects</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">at</span><span style="color: #007700">(</span><span style="color: #0000BB">1</span><span style="color: #007700">))<br />&nbsp; -&gt;</span><span style="color: #0000BB">method</span><span style="color: #007700">(</span><span style="color: #DD0000">'createTable'</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$schema</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">expects</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">at</span><span style="color: #007700">(</span><span style="color: #0000BB">2</span><span style="color: #007700">))<br />&nbsp; -&gt;</span><span style="color: #0000BB">method</span><span style="color: #007700">(</span><span style="color: #DD0000">'createTable'</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$schema</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">expects</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">exactly</span><span style="color: #007700">(</span><span style="color: #0000BB">3</span><span style="color: #007700">))<br />&nbsp; -&gt;</span><span style="color: #0000BB">method</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">anything</span><span style="color: #007700">())<br />&nbsp; -&gt;</span><span style="color: #0000BB">will</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">throwException</span><span style="color: #007700">(new \</span><span style="color: #0000BB">Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">'More calls than expected'</span><span style="color: #007700">)));<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div></p>
<p>There are two things of note here: One, the <code>method()</code> call accepts not just the typical strings but also constraints which are not the same as the matchers passed to <code>expects()</code>.</p>
<p>Two, expectations can overlap. PHPunit will happily fire every expectation, even if there is more than one set for the same method. If <code>method()</code> would only accept simple strings then it'd be tempting to collect expectations by method name (or presume PHPunit works that way) but simply this is not happening because, as above, <code>method()</code> accepts more than strings. Instead, when a method call happens, PHPUnit fires each expectation and each decide whether it's a match by using the the matcher passed to <code>expects</code> and the constraint to <code>method</code> and nothing else. So even if we add a <code>with()</code> call, this is not used to determine matching only to verify the expected behavior and this is why it is not possible to simply mock  multiple calls to the same method with different arguments.</p>
  </body>
</html>

