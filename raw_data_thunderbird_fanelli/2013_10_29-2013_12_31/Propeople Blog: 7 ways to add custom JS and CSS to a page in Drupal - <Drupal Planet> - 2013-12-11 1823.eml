X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Wed, 11 Dec 2013 17:23:36 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Wed, 11 Dec 2013 17:23:36 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Propeople Blog: 7 ways to add custom JS and CSS to a page in Drupal
Content-Transfer-Encoding: 8bit
Content-Base: http://wearepropeople.com/blog/7-ways-to-add-custom-js-and-css-to-a-page-in-drupal
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Propeople Blog: 7 ways to add custom JS and CSS to a page in Drupal</title>
    <base href="http://wearepropeople.com/blog/7-ways-to-add-custom-js-and-css-to-a-page-in-drupal">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p>Adding custom JS and CSS to a page is easy in <a href="http://wearepropeople.com">Drupal</a>, but can be a little bit messy when you need to choose what approach to use.</p><p>There are 7(wow!) ways of including and managing CSS/JS inside your theme/module. Let’s take a look at all of them provided by one of Propeople <a href="/about">Drupal developers</a>.</p><br /><p><strong>1. drupal_add_css(), drupal_add_js()</strong></p><p>This is the most common method used by most developers.</p><p><u>Advantages</u></p><ul><li>Easy to use, can be inserted wherever you want;</li><li>Can inset inline css/js;</li><li>Easy to find documentation;</li><li>Added files are cached;</li><li>Supports conditions (browser, media etc.).</li></ul><p><u style="line-height: 1.538em;">Disadvantages</u></p><ul><li>Can be found anywhere in the code where you’re not expecting it;</li><li>Including multiple files is messy;</li><li>If css/js file name changed you have to replace the name everywhere in the code.</li></ul><p> </p><br /><p><strong>2. including in .info file</strong></p><p><u>Advantages</u></p><ul><li>Quickly understand what files are used in module/theme;</li><li>Allows better aggregation;</li><li>Will be used on every page without having to insert in preprocess(etc.) functions;</li><li>Standard technique for themes;</li></ul><p><u style="line-height: 1.538em;">Disadvantages</u></p><ul><li>Unused css/js could be included where you don’t need it;</li><li>Almost no control when the files will be included;</li><li>Can’t remove or set weight to files in .info file.</li></ul><p> </p><br /><p><strong>3. [‘#attached’]</strong></p><p><u>Advantages</u></p><ul><li>Best way to make sure you files will always be included;</li><li>Works great with css, js and libraries;</li><li>Can use any kind of attached data;</li><li>Easy to include multiple files;</li><li>Best choice for forms.</li></ul><p><u style="line-height: 1.538em;">Disadvantages</u></p><ul><li>Including the cs styles/scripts will need multiple attaches;</li><li>Depends on file path and name.</li></ul><p> </p><br /><p><strong>4. drupal_add_library()</strong></p><p><u>Advantages</u></p><ul><li>Great when you need to reuse styles/scripts on different pages;</li><li>Path and file names are stored in one function;</li><li>You can take libraries to other projects;</li><li>Easy to include multiple files;</li><li>Libraries can use other libraries;</li></ul><p><u style="line-height: 1.538em;">Disadvantages</u></p><ul><li>A bit more code to write;</li><li>Includes all the files in libraries.</li></ul><p> </p><br /><p><strong>5. hook_css_alter(&amp;$css), hook_js_alter(&amp;$js)</strong></p><p><u>Advantages</u></p><ul><li>Allows to rearrange elements by weight;</li><li>You can delete files you don’t need before aggregation;</li><li>Easy to replace path to file (ex.: using jQuery from CDN);</li><li>Possible to reconfigure the aggregation;</li></ul><p><u style="line-height: 1.538em;">Disadvantages</u></p><ul><li>Adding files here is possible but a bad choice;</li><li>You can easily mess up with files here.</li></ul><p> </p><br /><p><strong>6. drupal_add_html_head()</strong></p><p><u>Advantages</u></p><ul><li>Allows to include scripts/styles with different type;</li><li>Can be used for js templating engines.</li></ul><p><u style="line-height: 1.538em;">Disadvantages</u></p><ul><li>No aggregation;</li><li>Hard to understand where the code is included;</li><li>Bad practice.</li></ul><p> </p><br /><p><strong>7. Including as html in .tpl.php or printing it</strong></p><p><u>Don't do that!</u></p><br /><p>Hope those methods come in handy for you. Make sure to use them in dependence of conditions you meet.</p><p>We personally like to use <em>drupal_add_library</em> and <em>[‘#attached’]</em>. The form attached is really great - we describe the attached files in the beginning of the form and it’s very easy to understand what’s going on without scrolling through all the code.</p><p>If you want to find out more, leave a comment and I will share some cool links to resources that explain how to add custom JS and CSS to a page in Drupal.</p></div></div></div><div class="form-item form-type-item">
  <label>Language </label>
 English
</div>
<div id="comment-wrapper-nid-1388"></div><div class="field field-name-field-tags field-type-taxonomy-term-reference field-label-above"><div class="field-label">Tags:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/tags/drupal" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Drupal</a></div><div class="field-item odd"><a href="/tags/development" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Development</a></div></div></div><div class="field field-name-field-drupal-planet field-type-taxonomy-term-reference field-label-above"><div class="field-label">Check this option to include this post in Planet Drupal aggregator:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/drupal/planet" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">planet</a></div></div></div>
  </body>
</html>

