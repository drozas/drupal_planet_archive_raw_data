X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Wed, 05 Feb 2014 19:03:02 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Wed, 05 Feb 2014 19:03:02 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Propeople Blog: Theming Layers in Drupal
Content-Transfer-Encoding: 8bit
Content-Base: http://wearepropeople.com/blog/theming-layers-in-drupal
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Propeople Blog: Theming Layers in Drupal</title>
    <base href="http://wearepropeople.com/blog/theming-layers-in-drupal">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div id="comment-wrapper-nid-1401"></div><div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">As you might already know, Drupal nodes are composed of multiple template files assembled together and displayed to the user.</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><br class="kix-line-break" /><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">An elegant and recommended solution to theme layers in </span><a href="https://drupal.org/marketplace/propeople"><span style="font-size: 15px; font-family: Arial; color: rgb(17, 85, 204); background-color: transparent; text-decoration: underline; white-space: pre-wrap;">Drupal </span></a><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">is to use </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">hook_theme()</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">. This hook allows us to declare </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">theme_hooks</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> and return an array with the information about the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">hook</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">, where the keys are the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">hook</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> name and its values, plus general information about the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">hook</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">. Here’s a simple example:</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><br class="kix-line-break" /><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; color: rgb(153, 153, 153); background-color: transparent; white-space: pre-wrap;">&lt;code language="PHP"&gt;<br class="kix-line-break" />/**<br class="kix-line-break" />* Implements hook_theme()<br class="kix-line-break" />*/<br class="kix-line-break" />function mymodule_theme() {<br class="kix-line-break" /> return array(<br class="kix-line-break" />   'mymodule_template' =&gt; array( // Theme hook name.<br class="kix-line-break" />     'template' =&gt; 'templates/mymodule-template', // Path to your template file.<br class="kix-line-break" />     'arguments' =&gt; array(''), // Passed default arguments.<br class="kix-line-break" />   ),<br class="kix-line-break" /> );<br class="kix-line-break" />}<br class="kix-line-break" />&lt;/code&gt;</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><br class="kix-line-break" /><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">We declare the hook name after the implementation type and give the full path to the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">PHPtemplate</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> file (Drupal will look for the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">mymodule-template.tpl.php </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">file in the template folder).</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><br class="kix-line-break" /><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">So how will we use this </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">hook</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">? Suppose we use </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">hook_menu()</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> to declare our custom callback. In menu callback, we will call our theme hook and pass some variables to be processed.</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><br class="kix-line-break" /><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; color: rgb(153, 153, 153); background-color: transparent; white-space: pre-wrap;">&lt;code&gt;<br class="kix-line-break" />/**<br class="kix-line-break" />* Implements hook_menu()<br class="kix-line-break" />*/<br class="kix-line-break" />function mymodule_menu() {<br class="kix-line-break" /> $items['mymodule/callback'] = array(<br class="kix-line-break" />   'page callback' =&gt; 'mymodule_callback',<br class="kix-line-break" />   'age arguments' =&gt; array(),<br class="kix-line-break" />   'access arguments' =&gt; array('access content'),<br class="kix-line-break" />   'type' =&gt; MENU_CALLBACK,<br class="kix-line-break" /> );<br class="kix-line-break" /> return $items;<br class="kix-line-break" />}<br class="kix-line-break" />&lt;/code&gt;</span></span></p><p> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">Now, let’s take a look at the menu callback. We will call the</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;"> ($hook, $variables = array()) </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">function to theme the output of the callback. The first argument is the theme’s hook name, and the second is an array of variables to be rendered.</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; color: rgb(153, 153, 153); background-color: transparent; white-space: pre-wrap;">&lt;code&gt;<br class="kix-line-break" />/**<br class="kix-line-break" />* Menu callback.<br class="kix-line-break" />*/<br class="kix-line-break" />function mymodule_callback() {<br class="kix-line-break" /> $output = theme('my_template', array('page_title' =&gt; 'Using theme hooks', 'page_text' =&gt; 'This is some text...'));<br class="kix-line-break" /> return $output;<br class="kix-line-break" />}<br class="kix-line-break" />&lt;/code&gt;</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><br class="kix-line-break" /><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">Our callback will invoke the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">my_template</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> hook and will render the variables passed as arguments. The result will be a page rendered with </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">mymodule-template.tpl.php</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">. With the content of </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">PHPTemplate</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> files, we can customize the html output by adding class attributes, changing markup order or  print other variables.</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; color: rgb(153, 153, 153); background-color: transparent; white-space: pre-wrap;">&lt;code&gt;<br class="kix-line-break" />&lt;div class="custom-template"&gt;<br class="kix-line-break" /> &lt;h2 class="title"&gt;&lt;?php if ($page_title): print $page_title; endif; ?&gt;&lt;/h2&gt;<br class="kix-line-break" /> &lt;div class="text"&gt;<br class="kix-line-break" />   &lt;?php if ($page_text):?&gt;<br class="kix-line-break" />     &lt;p&gt;&lt;?php print $page_text; ?&gt;&lt;/p&gt;<br class="kix-line-break" />   &lt;?php endif; ?&gt;<br class="kix-line-break" /> &lt;/div&gt;<br class="kix-line-break" /> &lt;div class="alter-data"&gt;<br class="kix-line-break" />   &lt;?php if ($alter_data): ?&gt;<br class="kix-line-break" />     &lt;p&gt;&lt;?php print $alter_data; ?&gt;&lt;/p&gt;<br class="kix-line-break" />   &lt;?php endif; ?&gt;<br class="kix-line-break" /> &lt;/div&gt;<br class="kix-line-break" />&lt;/div&gt;<br class="kix-line-break" />&lt;/code&gt;</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">You might be wondering how to override theme hooks. We can do this by using a function called </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">THEME_HOOK()</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">. We use it to modify variables, array structure, or alter variables before the template field is invoked with the </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">TEMPLATE PREPROCESS</span><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;"> function, in our case </span><span style="font-size: 15px; font-family: Arial; background-color: transparent; font-style: italic; white-space: pre-wrap;">module_preprocess_HOOK(&amp;$variables);</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; color: rgb(153, 153, 153); background-color: transparent; white-space: pre-wrap;">&lt;code&gt;<br class="kix-line-break" />/**<br class="kix-line-break" />* Template_preprocess().<br class="kix-line-break" />*/<br class="kix-line-break" />function mymodule_preprocess_my_template(&amp;$variables) {<br class="kix-line-break" /> $variables['page_text'] .= ' This line was added from preprocess_my_template().';<br class="kix-line-break" />}<br class="kix-line-break" />&lt;/code&gt;</span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"> </p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span id="docs-internal-guid-5234b50d-0358-43d1-1458-e5ecca90b88c"><span style="font-size: 15px; font-family: Arial; background-color: transparent; white-space: pre-wrap;">The theme layer approach is a clean an easy way to create and customize template files. Hope you find it useful!</span></span></p><div> </div></div></div></div><div class="field field-name-field-tags field-type-taxonomy-term-reference field-label-above"><div class="field-label">Tags:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/tags/drupal" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Drupal</a></div><div class="field-item odd"><a href="/tags/development" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Development</a></div><div class="field-item even"><a href="/tags/theming" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">theming</a></div></div></div><div class="field field-name-field-drupal-planet field-type-taxonomy-term-reference field-label-above"><div class="field-label">Check this option to include this post in Planet Drupal aggregator:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/drupal/planet" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">planet</a></div></div></div><div class="field field-name-field-topics field-type-taxonomy-term-reference field-label-above"><div class="field-label">Topics:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/topics/tech-development" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Tech &amp; Development</a></div></div></div>
  </body>
</html>

