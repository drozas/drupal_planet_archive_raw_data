X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Tue, 04 Mar 2014 08:10:12 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Tue, 04 Mar 2014 08:10:12 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Web Omelette: Adding menu items with wildcards to Drupal 7 menus
Content-Transfer-Encoding: 8bit
Content-Base: http://www.webomelette.com/adding-menu-items-wildcards-drupal-7-menus
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Web Omelette: Adding menu items with wildcards to Drupal 7 menus</title>
    <base href="http://www.webomelette.com/adding-menu-items-wildcards-drupal-7-menus">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even"><p>In this article I am going to share with you a quick tip on how to get your custom menu item into an actual menu on the site.</p>
<p>A problem I encountered when declaring a menu item using <a href="https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_menu/7" target="_blank">hook_menu()</a> is that if the menu item contains a wildcard, it just won't go into the menu. You can easily specify a <code>menu_name</code> and if you have no wildcards, it will show up nicely in the menu you specified. If however, you need some wildcards, it won't.</p>
<p>I needed one such menu item (imagine that) to be placed in one of my menus on the site. After trying all sorts of things and failing miserably at them, I decided to go at it through a preprocessor function and declare my menu item there. So let me show you how I did it and maybe you can tell me some better, more correct, ways to do it.</p>
<p>First of all, I needed to see where my menu was being printed on the page (it was the <strong>Secondary Menu</strong> in fact). If you look at the Bartik theme in the <code>page.tpl.php</code> file, you'll notice the following block:</p>
<pre><div class="codeblock"><code>  <span style="color: #000000"><span style="color: #0000BB">&lt;?php </span><span style="color: #007700">if (</span><span style="color: #0000BB">$secondary_menu</span><span style="color: #007700">): </span><span style="color: #0000BB">?&gt;</span></span><br />      &lt;div id="secondary-menu" class="navigation"&gt;<br />        <span style="color: #000000"><span style="color: #0000BB">&lt;?php </span><span style="color: #007700">print </span><span style="color: #0000BB">theme</span><span style="color: #007700">(</span><span style="color: #DD0000">'links__system_secondary_menu'</span><span style="color: #007700">, array(<br />          </span><span style="color: #DD0000">'links' </span><span style="color: #007700">=&gt; </span><span style="color: #0000BB">$secondary_menu</span><span style="color: #007700">,<br />          </span><span style="color: #DD0000">'attributes' </span><span style="color: #007700">=&gt; array(<br />            </span><span style="color: #DD0000">'id' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'secondary-menu-links'</span><span style="color: #007700">,<br />            </span><span style="color: #DD0000">'class' </span><span style="color: #007700">=&gt; array(</span><span style="color: #DD0000">'links'</span><span style="color: #007700">, </span><span style="color: #DD0000">'inline'</span><span style="color: #007700">, </span><span style="color: #DD0000">'clearfix'</span><span style="color: #007700">),<br />          ),<br />          </span><span style="color: #DD0000">'heading' </span><span style="color: #007700">=&gt; array(<br />            </span><span style="color: #DD0000">'text' </span><span style="color: #007700">=&gt; </span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'Secondary menu'</span><span style="color: #007700">),<br />            </span><span style="color: #DD0000">'level' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'h2'</span><span style="color: #007700">,<br />            </span><span style="color: #DD0000">'class' </span><span style="color: #007700">=&gt; array(</span><span style="color: #DD0000">'element-invisible'</span><span style="color: #007700">),<br />          ),<br />        )); </span><span style="color: #0000BB">?&gt;</span></span><br />      &lt;/div&gt; &lt;!-- /#secondary-menu --&gt;<br />    <span style="color: #000000"><span style="color: #0000BB">&lt;?php </span><span style="color: #007700">endif; </span><span style="color: #0000BB">?&gt;</span></span></code></div></pre><p>This is basically where the <strong>Secondary Menu</strong> gets printed onto the page. And since it's in the <code>page.tpl.php</code> file, we can go ahead and write a preprocessor function for the page in the theme's <code>template.php</code> file. I always have the <a href="https://drupal.org/project/devel" target="_blank">Devel</a> module installed locally so I can debug variables, so if you are following along, make sure you do too.</p>
<div class="codeblock"><code>function bartik_preprocess_page(&amp;$vars) {<br />  dpm($vars);<br />}</code></div>
<p>You'll notice I am hacking the Bartik theme but I'm only doing this for education purposes in order to see what's behind the hood. It will not go into any website like this. And make sure that if you do this, you don't redeclare the same preprocess function in the same theme or you'll get an error.</p>
<p>Having said that, with the function above, I am debugging the variables array that goes into the <code>page.tpl.php</code> file to be displayed. And what do you know, one of the keys of this array is <code>secondary_menu</code>. Great. Inside we have a number of elements keyed by the class name that gets applied to each menu item when it gets printed. If we look inside each element, we can gather what we need to add to this array in order for it to display another menu item: a <code>href</code> (path to which the menu will link) and a <code>title</code> (the link title that will be displayed).</p>
<p>If you are using wildcards, you need to make sure though that when building the <code>href</code>, you have all the necessary information in this preprocess function to actually build it. I needed to current user ID so that was available (plus I could always take the user object from the global scope).</p>
<p><p>So to add an example menu item, you'd do something like this:</p>
<pre><div class="codeblock"><code>$vars['secondary_menu']['my_menu'] = array(<br />  'href' =&gt; 'path/you/want/' . $id,<br />  'title' =&gt; 'My dynamic menu item',<br />);</code></div></pre><p>Please note that the <code>$id</code> is fictional and you have to gather it from somewhere if you want to include it in the URL. I was just giving an example. But if you refresh the page now, the <em>Secondary Menu</em> should include your new menu item.</p>
<h2>Bonus</h2>
<p>As a bonus, I'll show you how to add attributes to the item you include in the menu. If we wanted to add a <code>button</code> class to the menu link, instead of the above, we'd do this:</p>
<pre><div class="codeblock"><code>$vars['secondary_menu']['my_menu'] = array(<br />  'href' =&gt; 'path/you/want/' . $id,<br />  'title' =&gt; 'My dynamic menu item',<br />  'attributes' =&gt; array('class' =&gt; array('button')),<br />);</code></div></pre><p>Notice the extra <code>attributes</code> key we pass along. There you can include also other attributes that will get processed by the core <a href="https://api.drupal.org/api/drupal/includes%21common.inc/function/drupal_attributes/7" target="_blank">drupal_attributes()</a> function. </p>
<p>You can use this same technique to add classes to existing menu items as well, not necessarily new ones you are adding. A little theming lesson as well, similar to how we added classes to form elements in the <a href="/theming-drupal-forms-custom-classes">article on theming forms</a>.</p>
<h2>Caveat</h2>
<p>There is one problem with this approach, reason for which I kept trying to do it properly using <code>hook_menu()</code>.</p>
<p>Since you are adding the menu item through the template preprocess function, it will only be displayed in the <strong>Secondary Menu</strong> of the <code>page.tpl.php</code> file that prints it out.</p>
<p>Let's say you have a <code>block.tpl.php</code> that for some reason needs to print out this menu as well. In this case, your new menu item won't show up. You'll have to include it in the preprocess function of the <code>block.tpl.php</code> as well (for e.g. <code>bartik_preprocess_block()</code>) the same way we did above.</p>
</div></div></div><div class="field field-name-field-categories field-type-taxonomy-term-reference field-label-hidden">In <span class="field-items"><span class="field-item even"><a href="/drupal-theming">Theming</a></span> | <span class="field-item odd"><a href="/drupal">Drupal</a></span></span></div><div class="sharethis-buttons"><div class="sharethis-wrapper"><span st_url="http://www.webomelette.com/adding-menu-items-wildcards-drupal-7-menus" st_title="Adding menu items with wildcards to Drupal 7 menus" class="st_facebook"></span>
<span st_url="http://www.webomelette.com/adding-menu-items-wildcards-drupal-7-menus" st_title="Adding menu items with wildcards to Drupal 7 menus" class="st_twitter" st_via="drupalexp"></span>
<span st_url="http://www.webomelette.com/adding-menu-items-wildcards-drupal-7-menus" st_title="Adding menu items with wildcards to Drupal 7 menus" class="st_googleplus"></span>
<script type='text/javascript'>var switchTo5x = true;</script><script type='text/javascript' src='http://w.sharethis.com/button/buttons.js'></script><script type='text/javascript'>stLight.options({"publisher":"dr-8de6c3c4-3462-9715-caaf-ce2c161a50c"});</script></div></div>
  </body>
</html>

