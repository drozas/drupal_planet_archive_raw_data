X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Mon, 21 Apr 2014 01:28:56 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Mon, 21 Apr 2014 01:28:56 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Drupal core announcements: Approachable tasks for Drupal 8 Beta 1
Content-Transfer-Encoding: 8bit
Content-Base: https://groups.drupal.org/node/419403
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Drupal core announcements: Approachable tasks for Drupal 8 Beta 1</title>
    <base href="https://groups.drupal.org/node/419403">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p>If you couldn't make the (nearly) back-to-back sprints on beta-blocking issues at <a href="http://szeged2014.drupaldays.org/">Drupal DevDays Szeged</a> and <a href="http://www.nyccamp.org/">NYC Camp</a>, don't worry! We still have some leftover sprint tasks that will help with the first Drupal 8 beta release. Many of the <a href="https://drupal.org/project/issues/search/drupal?status%5B%5D=1&amp;status%5B%5D=13&amp;status%5B%5D=8&amp;status%5B%5D=14&amp;status%5B%5D=4&amp;version%5B%5D=8.x&amp;issue_tags_op=%3D&amp;issue_tags=beta+blocker">27 remaining beta blockers</a> require deep knowledge of the problem space; however, the tasks listed here (while not necessarily quick or easy) are more approachable and self-contained. Some of these issues are beta-blocking in their own right; others are "beta target" issues that would ideally be done for a beta release even if they aren't critical enough to block it.</p>
<p><em>If you're new to core contribution or Drupal 8, check out the <a href="https://drupal.org/core-mentoring">Core Contribution Mentoring</a> program instead.</em></p>
<p><img src="https://groups.drupal.org/files/beta_bunny.jpg" alt="Sprinters at the beta sprint, wearing bunny ears." /></p>
<h3>Documenting Critical Drupal 8 APIs</h3>
<h4><a href="https://drupal.org/node/1988612">#1988612: Change record: Apply formatters and widgets to rendered entity base fields</a></h4>
<p>Entities in Drupal 7 and 8 have two kinds of field data: base fields (or properties in Drupal 7), like the node author field or the taxonomy term description, and configurable field instances, which can be attached to a given fieldable entity type's bundles through the user interface. Previously, it was not possible to use widgets or formatters for base fields, so they typically use custom form elements and rendering code that are not compatible with Drupal 8's in-place editing functionality. Since December, however, it <em>is</em> possible to use widgets and formatters on base fields -- but there is no <strong>change record</strong> yet for this improvement.</p>
<h4><a href="https://drupal.org/node/2244777">#2244777: Document in WSCCI change notice or handbook all the menu changes (tasks, actions, contextual links, menu links) from 7 to 8</a></h4>
<p>In order for contrib developers to make good use of our first beta release, we need good documentation of the new Drupal 8 routing and menu systems. The first step is to thoroughly document exactly how a Drupal 7 module's <code>hook_menu()</code> is upgraded to Drupal 8, and the <a href="https://drupal.org/node/1800686">exisitng change record</a> is only partially complete. Join the discussion on this issue and help us <strong>complete this critical documentation</strong>.</p>
<h4><a href="https://drupal.org/node/2046367">#2046367: Document the internals of the router</a></h4>
<p>While not explicitly beta-blocking at this point, more complete API documentation for the routing system overall will be very valuable to contributed module developers using the first beta release. Help <strong>improve the routing documentation</strong> both in the Drupal.org handbook and in the Druapl 8 codebase.</p>
<h4><a href="https://drupal.org/node/2235363">#2235363: Document how plugin definitions should declare config dependencies</a></h4>
<p>This is a documentation followup for one small API change that supports the new configuration dependency system. It sits at the intersection of two new (and complicated) Drupal 8 APIs: plugin derivatives and the configuration entity system. Most of the confusing work for this issue is done, and it has resulted in a new <a href="https://drupal.org/node/2235409">handbook page on configuration entity dependencies</a>. The remaining task is to <strong>add documentation</strong> of the <code>config_dependencies</code> key in plugin derivative definitions to the API documentation in the codebase. (See under "Calculating dependencies in plugins and their derivatives" on the handbook page.) The handbook page, which is about configuration dependencies generally, also needs further work, but that is not blocking for this issue.</p>
<h3>Configuration system</h3>
<h4><a href="https://drupal.org/node/2224761">#2224761: Translation sync should be stored in own storage instead of injected in field instance settings</a></h4>
<p>This issue for the content translation module changes the way some of the module's configuration is stored. It's an easier change to implement compared to other deep architectural beta blockers for the Configuration system and the Entity Field API, but it still needs some work to resolve. The next step is to <strong>incorporate the latest feedback</strong> in comments #24 through #27 on the issue. This is also a great spot for multilingual initiative contributors to help with the beta.</p>
<h4><a href="https://drupal.org/node/2140511">#2140511: Configuration file name collisions silently ignored for default configuration</a></h4>
<p>This critical configuration system bug isn't a hard blocker for the beta release, but it can cause significant problems. An in-progress patch on the issue needs <strong>test failures resolved</strong>, <strong>updates for the latest changes</strong> in the configuration system, and other improvements.</p>
<h3>Entity Field API</h3>
<h4><a href="https://drupal.org/node/2016679">#2016679: [Meta] Expand Entity Type interfaces to provide methods</a></h4>
<p>Drupal 8 core provides numerous entity types, but the full API for each type is not easily documented or discoverable, since the entity's properties are accessed through magic getters. To improve the developer experience, each entity type interface is being expanded with relevant methods for the specific entity. (For example, <code>NodeInterface</code> now has methods like <code>isPromoted()</code>, <code>isPublished()</code>, <code>getTitle()</code>, and <code>setTitle()</code>.) All the methods for content entity types have been added, but only 1/4 of the configuration entity type interfaces are complete. Most issues have a submitted patch, and what is most needed is <strong>architectural review</strong> of the proposed interface methods. (For example, see <a href="https://drupal.org/comment/8678465#comment-8678465">comment #19 on the FieldConfig issue</a>.) If you have experience with one of the subsystems that still has an open child issue, or if you have a sound grasp on OO design generally, we could use your help to <strong>thoroughly review these patches</strong> so that the completed APIs are available for contributed module developers in a beta release.</p>
<h4><a href="https://drupal.org/node/2190313">#2190313: Add $EntityType::load() and loadMultiple() to simplify loading entities</a></h4>
<p>In a similar vein of improving the entity system's developer experience by making the API more discoverable and removing exposure to internal concepts, this issue adds static methods for loading the entities of each type. The patch needs to be <strong>rerolled to apply to HEAD</strong>, and then needs <strong>architectural review</strong>.</p>
<h4><a href="https://drupal.org/node/2010930">#2010930: [META] Apply formatters and widgets to rendered entity base fields</a></h4>
<p>Remember that issue above about <a href="https://drupal.org/node/1988612">widgets and formatters for base fields</a>? We also need to convert base fields other than the node title to also use widgets and formatters rather than custom code. This isn't considered beta-blocking, but it will change how contributed module developers interact with these entity types (plus make it so that in-place editing behaves in a more expected fashion). The several child issues of this meta (one per entity type) need either <strong>further work on the patch</strong> or <strong>code review</strong>. If you're somewhat familiar with entities and fields in Drupal 8, this is a good place to help.</p>
<h3>Views conversions</h3>
<h4><a href="https://drupal.org/node/1823450">#1823450: [Meta] Convert core listings to Views</a></h4>
<p>One of the major benefits of having Views in core is that legacy one-off listings in core can be replaced with user-configurable views. Views is used in numerous places in core already, for example, the user and content administration screens, the promoted node frontpage and RSS feed, and numerous blocks like the "Recent content" and "Who's online" blocks. A handful of more complicated legacy core listings still need to be <strong>converted to views</strong>. These conversions don't block a beta release, but are targeted for the beta since adding them involves removing legacy API functions. In particular, it would be valuable to complete the conversions of the <a href="https://drupal.org/node/1986606">comment admin page</a> and the <a href="https://drupal.org/node/1857256">taxonomy term pages</a> to views for a beta release. Additionally, <a href="https://drupal.org/node/1863906">replacing the content revision table with a view</a> is blocked on a <a href="https://drupal.org/node/1863898">major views bug related to content revisions</a>.</p>
  </body>
</html>

