X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys: $label4                                                                        
Date: Sat, 23 Aug 2014 11:37:02 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Sat, 23 Aug 2014 11:37:02 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Daniel Pocock: Want to be selected for Google Summer of Code 2015?
Content-Transfer-Encoding: 8bit
Content-Base: http://danielpocock.com/getting-selected-for-google-summer-of-code-2015
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Daniel Pocock: Want to be selected for Google Summer of Code 2015?</title>
    <base href="http://danielpocock.com/getting-selected-for-google-summer-of-code-2015">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p>I've mentored a number of students in 2013 and 2014 for <a href="http://www.debian.org">Debian</a> and <a href="http://ganglia.info">Ganglia</a> and most of the companies I've worked with have run internships and graduate programs from time to time.  GSoC 2014 has just finished and with all the excitement, many students are already asking what they can do to prepare and become selected in 2015.</p>
<p>My own observation is that the more time the organization has to get to know the student, the more confident they can be selecting that student.  Furthermore, the more time that the student has spent getting to know the free software community, the more easily they can complete GSoC.</p>
<p>Here I present a list of things that students can do to maximize their chance of selection and career opportunities at the same time.  These tips are useful for people applying for GSoC itself and related programs such as GNOME's <a href="http://gnome.org/opw/">Outreach Program for Women</a> or graduate placements in companies.</p>
<h3>Disclaimers</h3>
<p><em>There is no guarantee that Google will run the program again in 2015 or any future year.</em></p>
<p><em>There is no guarantee that any organization or mentor (including myself) will be involved until the official list of organizations is published by Google.</em></p>
<p><img src="http://danielpocock.com/sites/danielpocock.com/files/no-pizza.png" width="200" align="left" /></p><p><em>Do not follow the advice of web sites that invite you to send pizza or anything else of value to prospective mentors.</em></p>
<p><em>Following the steps in this page doesn't guarantee selection.</em>  That said, people who do follow these steps are much more likely to be considered and interviewed than somebody who hasn't done any of the things in this list.</p>
<h3>Understand what <em>free software</em> really is</h3>
<p>You may hear terms like <em>free software</em> and <em>open source software</em> used interchangeably.</p>
<p>They don't mean exactly the same thing and many people use the term <em>free software</em> for the wrong things.  Not all open source projects meet the definition of free software.  Those that don't, usually as a result of deficiencies in their licenses, are fundamentally incompatible with the majority of software that does use approved licenses.</p>
<p>Google Summer of Code is about both writing and publishing your code and it is also about community.  It is fundamental that you know the basics of licensing and how to choose a <em>free</em> license that empowers the community to collaborate on your code.</p>
<p>Please read up on this topic early on and come back and review this from time to time.  The <a href="http://www.gnu.org/philosophy/free-sw.html">The GNU Project / Free Software Foundation have excellent resources</a> to help you understand what a free software license is and how it works to maximize community collaboration.</p>
<h3>Don't look for shortcuts</h3>
<p>There is no shortcut to GSoC selection and there is no shortcut to GSoC completion.</p>
<p>The student stipend (USD $5,500 in 2014) is not paid to students unless they complete a minimum amount of valid code.  This means that even if a student did find some shortcut to selection, it is unlikely they would be paid without completing meaningful work.</p>
<p>If you are the right candidate for GSoC, you will not need a shortcut anyway.  Are you the sort of person who can't leave a coding problem until you really feel it is fixed, even if you keep going all night?  Have you ever woken up in the night with a dream about writing code still in your head?  Do you become irritated by tedious or repetitive tasks and often think of ways to write code to eliminate such tasks?  Does your family get cross with you because you take your laptop to Christmas dinner or some other significant occasion and start coding?  If some of these statements summarize the way you think or feel you are probably a natural fit for GSoC.</p>
<h3>An opportunity money can't buy</h3>
<p>The GSoC stipend will not make you rich.  It is intended to make sure you have enough money to survive through the summer and focus on your project.  Professional developers make this much money in a week in leading business centers like New York, London and Singapore.  When you get to that stage in 3-5 years, you will not even remember exactly how much you made during internships.</p>
<p>GSoC gives you an edge over other internships because it involves <em>publicly promoting your work</em>.  Many companies still try to hide the potential of their best recruits for fear they will be poached or that they will be able to demand higher salaries.  Everything you complete in GSoC is intended to be published and you get full credit for it.  Imagine an amateur musician getting the opportunity to perform on the main stage at a rock festival.  This is how the free software community works.</p>
<p><img src="http://danielpocock.com/sites/danielpocock.com/files/concert.png" /></p>
<p>Having a portfolio of free software that you have created or collaborated on and a wide network of professional contacts that you develop before, during and after GSoC will continue to pay you back for years.  While other graduates are being screened through group interviews and testing days run by employers, people with a track record in a free software project often find they go straight to the final interview round.</p>
<h3>Register your domain name and make a permanent email address</h3>
<p>Free software is all about community and collaboration.  Register your own domain name as this will become a focal point for your work and for people to get to know you as you become part of the community.</p>
<p>This is sound advice for anybody working in IT, not just programmers.  It gives the impression that you are confident and have a long term interest in a technology career.</p>
<p><em>Choosing the provider:</em> as a minimum, you want a provider that offers DNS management, static web site hosting, email forwarding and XMPP services all linked to your domain.  You do not need to choose the provider that is linked to your internet connection at home and that is often not the best choice anyway.  The XMPP foundation maintains a <a href="http://wiki.xmpp.org/web/Jabber_Hosting_Possibilities">list of providers known to support XMPP</a>.</p>
<p>Create an email address within your domain name.  The most basic domain hosting providers will let you forward the email address to a webmail or university email account of your choice.  Configure your webmail to send replies using your personalized email address in the <em>From</em> header.</p>
<p>Update your <em>~/.gitconfig</em> file to use your personalized email address in your <a href="http://git-scm.org">Git</a> commits.</p>
<h3>Create a web site and blog</h3>
<p>Start writing a blog.  Host it using your domain name.</p>
<p>Some people blog every day, other people just blog once every two or three months.</p>
<p>Create links from your web site to your other profiles, such as a Github profile page.  This helps re-inforce the pages/profiles that are genuinely related to you and avoid confusion with the pages of other developers.</p>
<p>Many mentors are keen to see their students writing a weekly report on a blog during GSoC so starting a blog now gives you a head start.  Mentors look at blogs during the selection process to try and gain insight into which topics a student is most suitable for.</p>
<h3>Create a profile on Github</h3>
<p><a href="https://github.com">Github</a> is one of the most widely used software development web sites.  Github makes it quick and easy for you to publish your work and collaborate on the work of other people.  Create an account today and get in the habbit of <em>forking</em> other projects, improving them, committing your changes and <em>pushing</em> the work back into your Github account.</p>
<p>Github will quickly build a profile of your commits and this allows mentors to see and understand your interests and your strengths.</p>
<p>In your Github profile, add a link to your web site/blog and make sure the email address you are using for Git commits (in the <em>~/.gitconfig</em> file) is based on your personal domain.</p>
<h3>Start using PGP</h3>
<p><a href="http://en.wikipedia.org/wiki/Pretty_Good_Privacy">Pretty Good Privacy (PGP)</a> is the industry standard in protecting your identity online.  All serious free software projects use PGP to sign tags in Git, to sign official emails and to sign official release files.</p>
<p>The most common way to start using PGP is with the <a href="https://www.gnupg.org/">GnuPG (GNU Privacy Guard) utility</a>.  It is installed by the package manager on most Linux systems.</p>
<p>When you <a href="http://keyring.debian.org/creating-key.html">create your own PGP key</a>, use the email address involving your domain name.  This is the most permanent and stable solution.</p>
<p>Print your key fingerprint using the <em>gpg-key2ps</em> command, it is in the <em>signing-party</em> package on most Linux systems.  Keep copies of the fingerprint slips with you.</p>
<p><img src="http://danielpocock.com/sites/danielpocock.com/files/pgp-slip.jpg" /></p>
<p><em>This is what my own PGP fingerprint slip looks like.  You can also print the key fingerprint on a business card for a more professional look.</em></p>
<p>Using PGP, it is recommend that you <em>sign</em> any important messages you send but you do not have to encrypt the messages you send, especially if some of the people you send messages to (like family and friends) do not yet have the PGP software to decrypt them.</p>
<p>If using the <a href="https://www.mozilla.org/thunderbird/">Thunderbird</a> (<a href="http://packages.debian.org/icedove">Icedove</a>) email client from <a href="http://www.mozilla.org">Mozilla</a>, you can easily send signed messages and validate the messages you receive using the <a href="https://www.enigmail.net">Enigmail</a> plugin.</p>
<h3>Get your PGP key signed</h3>
<p>Once you have a PGP key, you will need to find other developers to sign it.  For people I mentor personally in GSoC, I'm keen to see that you <a href="https://wiki.debian.org/Keysigning/Offers">try and find another Debian Developer in your area</a> to sign your key as early as possible.</p>
<h3>Free software events</h3>
<p>Try and find all the free software events in your area in the months between now and the end of the next Google Summer of Code season.  Aim to attend at least two of them before GSoC.</p>
<p>Look closely at the schedules and find out about the individual speakers, the companies and the free software projects that are participating.  For events that span more than one day, find out about the dinners, pub nights and other social parts of the event.</p>
<p>Try and identify people who will attend the event who have been GSoC mentors or who intend to be.  Contact them before the event, if you are keen to work on something in their domain they may be able to make time to discuss it with you in person.</p>
<p>Take your PGP fingerprint slips.  Even if you don't participate in a formal key-signing party at the event, you will still find some developers to sign your PGP key individually.  <em>You must take a photo ID document</em> (such as your passport) for the other developer to check the name on your fingerprint but you do not give them a copy of the ID document.</p>
<p>Events come in all shapes and sizes.  <a href="http://www.fosdem.org">FOSDEM</a> is an example of one of the bigger events in Europe, <a href="http://linux.conf.au/">linux.conf.au</a> is a similarly large event in Australia.  There are many, many more local events such as the <a href="http://france.debian.net/events/minidebconf2015/">Debian France <em>mini-DebConf</em> in Lyon, 2015</a>.  Many events are either free or free for students but please check carefully if there is a requirement to register before attending.</p>
<p>On your blog, discuss which events you are attending and which sessions interest you.  Write a blog during or after the event too, including photos.</p>
<p><img src="http://danielpocock.com/sites/danielpocock.com/files/DSC_0860.JPG" /></p>
<p><em><a href="http://www.quantcast.com">Quantcast</a> generously hosted the Ganglia community meeting in San Francisco, October 2013.  We had a wild time in their offices with mini-scooters, burgers, beers and the Ganglia book.  That's me on the pink mini-scooter and Bernard Li, one of the other Ganglia GSoC 2014 admins is on the right.</em></p>
<h3>Install Linux</h3>
<p>GSoC is fundamentally about <em>free software</em>.  Linux is to free software what a tree is to the forest.  <em>Using Linux every day on your personal computer dramatically increases your ability to interact with the free software community and increases the number of potential GSoC projects that you can participate in.</em></p>
<p>This is not to say that people using Mac OS or Windows are unwelcome.  I have worked with some great developers who were not Linux users.  Linux gives you an edge though and the best time to gain that edge is now, while you are a student and well before you apply for GSoC.</p>
<p>If you must run Windows for some applications used in your course, it will run just fine in a virtual machine using <a href="https://www.virtualbox.org/">Virtual Box</a>, a free software solution for desktop virtualization.   Use Linux as the primary operating system.</p>
<p>Here are links to download ISO DVD (and CD) images for some of the main Linux distributions:</p>
<ul><li><a href="https://www.debian.org/distrib/">Debian</a></li>
<li><a href="http://fedoraproject.org/en/get-fedora">Fedora</a></li>
<li><a href="http://www.ubuntu.com/download/desktop">Ubuntu</a></li>
</ul><p>If you are nervous about getting started with Linux, install it on a spare PC or in a virtual machine before you install it on your main PC or laptop.  Linux is much less demanding on the hardware than Windows so you can easily run it on a machine that is 5-10 years old.  Having just 4GB of RAM and 20GB of hard disk is usually more than enough for a basic graphical desktop environment although having better hardware makes it faster.</p>
<p>Your experiences installing and running Linux, especially if it requires some special effort to make it work with some of your hardware, make interesting topics for your blog.</p>
<h3>Decide which technologies you know best</h3>
<p>Personally, I have mentored students working with C, C++, Java, Python and JavaScript/HTML5.</p>
<p>In a GSoC program, you will typically do most of your work in just one of these languages.</p>
<p>From the outset, decide which language you will focus on and do everything you can to improve your competence with that language.  For example, if you have already used Java in most of your course, plan on using Java in GSoC and make sure you read <a href="http://www.oracle.com/technetwork/articles/javase/bloch-effective-08-qa-140880.html">Effective Java (2nd Edition)</a> by Joshua Bloch.</p>
<h3>Decide which themes appeal to you</h3>
<p>Find a topic that has long-term appeal for you.  Maybe the topic relates to your course or maybe you already know what type of company you would like to work in.</p>
<p>Here is a list of some topics and some of the relevant software projects:</p>
<ul><li>System administration, servers and networking: consider projects involving monitoring, automation, packaging.  <a href="http://ganglia.info">Ganglia</a> is a great community to get involved with and you will encounter the Ganglia software in many large companies and academic/research networks.  Contributing to a Linux distribution like Debian or Fedora packaging is another great way to get into system administration.</li>
<li>Desktop and user interface: consider projects involving window managers and desktop tools or adding to the user interface of just about any other software.</li>
<li>Big data and data science: this can apply to just about any other theme.  For example, data science techniques are frequently used now to improve system administration.</li>
<li>Business and accounting: consider accounting, CRM and ERP software.</li>
<li>Finance and trading: consider projects like R, market data software like <a href="http://www.openmama.org">OpenMAMA</a> and connectivity software (Apache Camel)</li>
<li>Real-time communication (RTC), VoIP, webcam and chat: look at the <a href="http://jscommunicator.org">JSCommunicator</a> or the <a href="http://jitsi.org">Jitsi project</a></li>
<li>Web (JavaScript, HTML5): look at the <a href="http://jscommunicator.org">JSCommunicator</a></li>
</ul><p>Before the GSoC application process begins, you should aim to learn as much as possible about the theme you prefer and also gain practical experience using the software relating to that theme.  For example, if you are attracted to the business and accounting theme, install the <a href="http://www.xtuple.com/postbooks">PostBooks</a> suite and get to know it.  Maybe you know somebody who runs a small business: help them to upgrade to PostBooks and use it to prepare some reports.</p>
<h3>Make something</h3>
<p>Make some small project, less than two week's work, to demonstrate your skills.  It is important to make something that somebody will use for a practical purpose, this will help you gain experience communicating with other users through Github.</p>
<p>For an example, see the <a href="https://github.com/JLouback/bapple">servlet Juliana Louback created for fixing phone numbers</a> in December 2013.  It has since been used as part of the <a href="http://www.lumicall.org/DialAssist/">Lumicall web site</a> and Juliana was <a href="https://bits.debian.org/2014/04/welcome-gsoc-students-2014.html">selected for a GSoC 2014 project with Debian</a>.</p>
<p><em>There is no better way to demonstrate to a prospective mentor that you are ready for GSoC than by completing and publishing some small project like this yourself.</em>  If you don't have any immediate project ideas, many developers will also be able to give you tips on small projects like this that you can attempt, just come and ask us on one of the mailing lists.</p>
<p>Ideally, the project will be something that you would use anyway even if you do not end up participating in GSoC.  Such projects are the most motivating and rewarding and usually end up becoming an example of your best work.  To continue the example of somebody with a preference for business and accounting software, a small project you might create is a <a href="http://www.xtuple.org/docs/developer-zone/extensions-overview">plugin or extension for PostBooks</a>.</p>
<h3>Getting to know prospective mentors</h3>
<p>Many web sites provide useful information about the developers who contribute to free software projects.  Some of these developers may be willing to be a GSoC mentor.</p>
<p>For example, look through some of the following:</p>
<ul><li>Planet / Blog aggregation sites: these sites all have links to the blogs of many developers.  They are useful sources of information about events and also finding out who works on what.
<ul><li><a href="http://planet.debian.org">planet.debian.org</a></li>
<li><a href="http://planet.fedoraproject.org">planet.fedoraproject.org</a></li>
<li><a href="http://planet.ubuntu.com">planet.ubuntu.com</a></li>
<li><a href="http://planet.drupal.org/">planet.drupal.org</a></li>
<li><a href="http://planet.postgresql.org/">planet.postgresql.org</a></li>
</ul></li>
<li>Developer profile pages.  Many projects publish a page about each developer and the packages, modules or other components he/she is responsible for.  Look through these lists for areas of mutual interest.
<ul><li><a href="http://qa.debian.org/developer.php?login=daniel@pocock.com.au">my package list in Debian</a></li>
<li><a href="https://admin.fedoraproject.org/pkgdb/packager/pocock/">my package list in Fedora</a></li>
</ul></li>
<li>Developer github profiles.  Github makes it easy to see what projects a developer has contributed to.  To see many of my own projects, browse through the history at <a href="https://github.com/dpocock">my own Github profile</a></li>
</ul><h3>Getting on the mentor's shortlist</h3>
<p>Once you have identified projects that are interesting to you and developers who work on those projects, it is important to get yourself on the developer's shortlist.</p>
<p>Basically, the shortlist is a list of all students who the developer believes can complete the project.  If I feel that a student is unlikely to complete a project or if I don't have enough information to judge a student's probability of success, that student will not be on my shortlist.</p>
<p>If I don't have any student on my shortlist, then a project will not go ahead at all.  If there are multiple students on the shortlist, then I will be looking more closely at each of them to try and work out who is the best match.</p>
<p>One way to get a developer's attention is to look at bug reports they have created.  Github makes it easy to see complaints or bug reports they have made about their own projects or other projects they depend on.  Another way to do this is to search through their code for strings like <em>FIXME</em> and <em>TODO</em>.  Projects with standalone bug trackers like <a href="http://bugs.debian.org">the Debian bug tracker</a> also provide an easy way to <a href="http://bugs-search.debian.org/cgi-bin/search.cgi">search for bug reports that a specific person has created or commented on</a>.</p>
<p>Once you find some relevant bug reports, email the developer.  Ask if anybody else is working on those issues.  Try and start with an issue that is particularly easy and where the solution is interesting for you.  This will help you learn to compile and test the program before you try to fix any more complicated bugs.  It may even be something you can work on as part of your academic program.</p>
<h3>Find successful projects from the previous year</h3>
<p>Contact organizations and ask them which GSoC projects were most successful.  In many organizations, you can find the past students' project plans and their final reports published on the web.  Read through the plans submitted by the students who were chosen.  Then read through the final reports by the same students and see how they compare to the original plans.</p>
<h3>Start building your project proposal now</h3>
<p>Don't wait for the application period to begin.  Start writing a project proposal now.</p>
<p>When writing a proposal, it is important to include several things:</p>
<ul><li>Think big: what is the goal at the end of the project?  Does your work help the greater good in some way, such as increasing the market share of Linux on the desktop?</li>
<li>Details: what are specific challenges?  What tools will you use?</li>
<li>Time management: what will you do each week?  Are there weeks where you will not work on GSoC due to vacation or other events?  These things are permitted but they must be in your plan if you know them in advance.  If an accident or death in the family cut a week out of your GSoC project, which work would you skip and would your project still be useful without that?  Having two weeks of flexible time in your plan makes it more resilient against interruptions.</li>
<li>Communication: are you on mailing lists, IRC and XMPP chat?  Will you make a weekly report on your blog?</li>
<li>Users: who will benefit from your work?</li>
<li>Testing: who will test and validate your work throughout the project?  Ideally, this should involve more than just the mentor.</li>
</ul><p>If your project plan is good enough, could you put it on Kickstarter or another crowdfunding site?  This is a good test of whether or not a project is going to be supported by a GSoC mentor.</p>
<h3>Learn about packaging and distributing software</h3>
<p>Packaging is a vital part of the free software lifecycle.  It is very easy to upload a project to Github but it takes more effort to have it become an official package in systems like Debian, Fedora and Ubuntu.</p>
<p>Packaging and the communities around Linux distributions help you reach out to users of your software and get valuable feedback and new contributors.  This boosts the impact of your work.</p>
<p>To start with, you may want to help the maintainer of an existing package.  <a href="https://alioth.debian.org/softwaremap/trove_list.php">Debian packaging teams</a> are existing communities that work in a team and welcome new contributors.  The <a href="http://mentors.debian.net/">Debian Mentors</a> initiative is another great starting place.  In the Fedora world, the place to start may be in <a href="https://fedoraproject.org/wiki/Category:SIGs">one of the Special Interest Groups (SIGs)</a>.</p>
<h3>Think from the mentor's perspective</h3>
<p>After the application deadline, mentors have just 2 or 3 weeks to choose the students.  This is actually not a lot of time to be certain if a particular student is capable of completing a project.  If the student has a published history of free software activity, the mentor feels a lot more confident about choosing the student.</p>
<p>Some mentors have more than one good student while other mentors receive no applications from capable students.  In this situation, it is very common for mentors to send each other details of students who may be suitable.  Once again, if a student has a good Github profile and a blog, it is much easier for mentors to try and match that student with another project.</p>
<p><img src="http://danielpocock.com/sites/danielpocock.com/files/GSoC-2013-plus.png" /></p>
<h3>Conclusion</h3>
<p>Getting into the world of software engineering is much like joining any other profession or even joining a new hobby or sporting activity.  If you run, you probably have various types of shoe and a running watch and you may even spend a couple of nights at the track each week.  If you enjoy playing a musical instrument, you probably have a collection of sheet music, accessories for your instrument and you may even aspire to build a recording studio in your garage (or you probably know somebody else who already did that).</p>
<p>The things listed on this page will not just help you walk the walk and talk the talk of a software developer, they will put you on a track to being one of the leaders.  If you look over the profiles of other software developers on the Internet, you will find they are doing most of the things on this page already.  Even if you are not selected for GSoC at all or decide not to apply, working through the steps on this page will help you clarify your own ideas about your career and help you make new friends in the software engineering community.</p>
</div></div></div>
  </body>
</html>

