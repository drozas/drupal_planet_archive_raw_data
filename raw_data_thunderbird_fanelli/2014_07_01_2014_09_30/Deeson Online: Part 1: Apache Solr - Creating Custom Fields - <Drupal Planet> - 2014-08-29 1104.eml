X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Fri, 29 Aug 2014 09:04:03 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Fri, 29 Aug 2014 09:04:03 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Deeson Online: Part 1: Apache Solr - Creating Custom Fields
Content-Transfer-Encoding: 8bit
Content-Base: http://deeson-online.co.uk/labs/part-1-apache-solr-creating-custom-fields
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Deeson Online: Part 1: Apache Solr - Creating Custom Fields</title>
    <base href="http://deeson-online.co.uk/labs/part-1-apache-solr-creating-custom-fields">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p>This is the first of two blog posts. In this one I will show you how to create a custom search index in Apache Solr. Part 2 will go into how you can then manually set the field bias of your custom field so that you can control it through the settings with the Apache Solr module.</p>
<h2>Creating a custom field</h2>
<p>Adding custom fields to Apache Solr is often something that you can end up needing to do for a project. The Apache solr module makes this easy to do with: hook_apachesolr_index_document_build().</p>
<p><span class="geshifilter"><code class="php geshifilter-php"><span style="color: #009933; font-style: italic;">/** * Implements hook_apachesolr_index_document_build(). */</span> <span style="color: #000000; font-weight: bold;">function</span> MY_MODULE_apachesolr_index_document_build<span style="color: #009900;">&#40;</span>ApacheSolrDocument <span style="color: #000088;">$document</span><span style="color: #339933;">,</span> <span style="color: #000088;">$entity</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span> <span style="color: #000088;">$document</span><span style="color: #339933;">-&amp;</span>gt<span style="color: #339933;">;</span>addField<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span><span style="color: #666666; font-style: italic;">#39;ss_my_field&amp;#39;, &amp;#39;&amp;#39;); } </span></code></span></p>
<p>When defining the field you will notice that this is prefixed with <strong>'ss_'</strong> which is very important as it tells Apache Solr what type of field it is.</p>
<p>This prefix can be two or three characters long, with the first character defining the data type of field (e.g. string (s), boolean (b), date (d) etc.) and the last character defines if it is a single (s) or multi-valued (m) field.</p>
<p>If you have a look at the <em>schema.xml</em> file that comes with the ApacheSolr module you will see a section that details the standard prefixes for field indexes. Here is a snippet from the file:</p>
<p><span class="geshifilter"><code class="php geshifilter-php"><span style="color: #339933;">&lt;!--</span> We <span style="color: #000000; font-weight: bold;">use</span> long <span style="color: #b1b100;">for</span> integer since <span style="color: #cc66cc;">64</span> bit ints are now common in PHP<span style="color: #339933;">.</span> <span style="color: #339933;">--&gt;&lt;</span>dynamicfield indexed<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> multivalued<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;false&quot;</span> name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;is_*&quot;</span> stored<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> type<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;long&quot;</span><span style="color: #339933;">&gt;</span> <span style="color: #339933;">&lt;</span>dynamicfield indexed<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> multivalued<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;im_*&quot;</span> stored<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> type<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;long&quot;</span><span style="color: #339933;">&gt;</span> <span style="color: #339933;">&lt;!--</span> <a href="http://www.php.net/list"><span style="color: #990000;">List</span></a> of floats can be saved in a regular float field <span style="color: #339933;">--&gt;&lt;</span>dynamicfield indexed<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> multivalued<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;false&quot;</span> name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;fs_*&quot;</span> stored<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> type<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;float&quot;</span><span style="color: #339933;">&gt;</span> <span style="color: #339933;">&lt;</span>dynamicfield indexed<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> multivalued<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;fm_*&quot;</span> stored<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;true&quot;</span> type<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;float&quot;</span><span style="color: #339933;">&gt;</span> <span style="color: #339933;">&lt;/</span>dynamicfield<span style="color: #339933;">&gt;&lt;/</span>dynamicfield<span style="color: #339933;">&gt;&lt;/</span>dynamicfield<span style="color: #339933;">&gt;&lt;/</span>dynamicfield<span style="color: #339933;">&gt;</span></code></span></p>
<p>Having defined your new index you will need to tell Apache Solr about it. To do this all you have to do is do a full re-index of your content which will register your custom field with Solr. You can check that your field has been index correctly by checking the Solrs search index report - /admin/reports/apachesolr.</p>
<p>Having now indexed your new field you can now alter the query to make sure of this new field using hook_apachesolr_query_alter().</p>
<p><span class="geshifilter"><code class="php geshifilter-php"><span style="color: #009933; font-style: italic;">/** * Implements hook_apachesolr_query_alter(). */</span> <span style="color: #000000; font-weight: bold;">function</span> MY_MODULE_apachesolr_query_alter<span style="color: #009900;">&#40;</span>DrupalSolrQueryInterface <span style="color: #000088;">$query</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span> <span style="color: #000088;">$query</span><span style="color: #339933;">-&amp;</span>gt<span style="color: #339933;">;</span>addParam<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span><span style="color: #666666; font-style: italic;">#39;sort&amp;#39;, &amp;#39;ss_my_field asc&amp;#39;); } </span></code></span></p>
<p>You will now see that this is changing the results of your search based upon you new field.</p>
<p>Now you've created your customer field, my next post will show you how you can define it so that you can manually set the field bias within the Apache Solr admin section when a search is performed.</p>
<p>Interested to get feedback on part one though - so share your comments below!</p>
</div></div></div><div class="field field-name-node-link field-type-ds field-label-hidden"><div class="field-items"><div class="field-item even"><a href="/labs/part-1-apache-solr-creating-custom-fields">Read more</a></div></div></div><div class="field field-name-title field-type-ds field-label-hidden"><div class="field-items"><div class="field-item even" property="dc:title"><h2>Part 1: Apache Solr - Creating Custom Fields</h2></div></div></div><div class="field field-name-meta field-type-ds field-label-hidden"><div class="field-items"><div class="field-item even">By <a href="/category/author/mike-davis">Mike Davis</a> | 29th August 2014</div></div></div>
  </body>
</html>

