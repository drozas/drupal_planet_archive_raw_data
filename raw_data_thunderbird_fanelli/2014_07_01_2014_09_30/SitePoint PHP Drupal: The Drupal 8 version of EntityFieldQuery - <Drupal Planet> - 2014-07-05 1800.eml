X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Sat, 05 Jul 2014 16:00:44 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Sat, 05 Jul 2014 16:00:44 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: SitePoint PHP Drupal: The Drupal 8 version of EntityFieldQuery
Content-Transfer-Encoding: 8bit
Content-Base: http://www.sitepoint.com/drupal-8-version-entityfieldquery/
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>SitePoint PHP Drupal: The Drupal 8 version of EntityFieldQuery</title>
    <base href="http://www.sitepoint.com/drupal-8-version-entityfieldquery/">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p><p><img src="http://dab1nmslvvntp.cloudfront.net/wp-content/uploads/2014/07/1404316515drupal8wide.png" alt="" title="" /></p>

<p>Even though Drupal 7 core fell short of a proper way of handling its brand new entity system (we currently rely on the great <a href="https://drupal.org/project/entity">Entity</a> module for that), it did give us <a href="https://api.drupal.org/api/drupal/includes%21entity.inc/class/EntityFieldQuery/7">EntityFieldQuery</a>. For those of you who don’t know, <code>EntityFieldQuery</code> is a very powerful querying class used to search Drupal entities programatically (nodes, users, etc). </p>

<p>It provides a number of methods that make it easy to query entities based on conditions such as field values or class properties. If you don’t know how it works, feel free to check out this <a href="https://drupal.org/node/1343708">documentation page</a> or <a href="http://www.sitepoint.com/understanding-drupals-entityfieldquery/">this great tutorial</a> on the subject. </p>

<p>In this article I am going to talk about what we have in Drupal 8 for querying entities. There is no more <code>EntityFieldQuery</code>, but there’s an <code>entity.query</code> service that will instantiate a query object for a given entity type (and that implements the <a href="https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Entity%21Query%21QueryInterface.php/interface/QueryInterface/8">\Drupal\Core\Entity\Query\QueryInterface</a>). We can access this service statically through the <a href="https://api.drupal.org/api/drupal/core%21lib%21Drupal.php/function/Drupal%3A%3AentityQuery/8">\Drupal</a> namespace or using dependency injection. </p>

<p>First up, we’ll look at querying node entities and then we’ll see how to load them. The same techniques will work with other content entities as well (users, comments etc), but also with configuration entities, and that’s really cool. </p>

<h2 id="the-entity-query-service">The entity query service</h2>

<p>As mentioned, there are two ways we can access the <code>entity.query</code> service that we use for querying entities. Statically, we can do this:</p></p><p><em>Continue reading %<a rel="nofollow" href="http://www.sitepoint.com/drupal-8-version-entityfieldquery/">The Drupal 8 version of EntityFieldQuery</a>%</em></p>
  </body>
</html>

