X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Tue, 12 Aug 2014 16:00:43 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Tue, 12 Aug 2014 16:00:43 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Stanford Web Services Blog: How I learned the hard way to create reusable classes
Content-Transfer-Encoding: 8bit
Content-Base: https://swsblog.stanford.edu/blog/how-i-learned-hard-way-create-reusable-classes
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Stanford Web Services Blog: How I learned the hard way to create reusable classes</title>
    <base href="https://swsblog.stanford.edu/blog/how-i-learned-hard-way-create-reusable-classes">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p class="summary">Drupal is (in)famous for providing an egregious amount of class selectors to target every layer imaginable in its rendered HTML. Some superstar culprits are Field Collections, Field Groups, and complex Views. When we see so many handy, available selector classes, it's so tempting just to target them directly in your CSS. But today, I want to share a lesson I learned the hard way about why you've just gotta resist that temptation, and instead create reusable classes.</p></div></div></div>
  </body>
</html>

