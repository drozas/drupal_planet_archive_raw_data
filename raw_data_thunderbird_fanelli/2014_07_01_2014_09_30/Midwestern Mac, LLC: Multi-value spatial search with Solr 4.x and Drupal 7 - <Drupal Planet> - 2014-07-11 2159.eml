X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Fri, 11 Jul 2014 19:59:34 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Fri, 11 Jul 2014 19:59:34 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Midwestern Mac, LLC: Multi-value spatial search with Solr 4.x and Drupal 7
Content-Transfer-Encoding: 8bit
Content-Base: http://www.midwesternmac.com/blogs/jeff-geerling/multi-value-spatial-search
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Midwestern Mac, LLC: Multi-value spatial search with Solr 4.x and Drupal 7</title>
    <base href="http://www.midwesternmac.com/blogs/jeff-geerling/multi-value-spatial-search">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p>For some time, Solr 3.x and Drupal 7 have been able to do geospatial search (using the location module, geofield, or other modules that stored latitude and longitude coordinates in Drupal that could be indexed by Apache Solr). Life was goodâ€”as long as you only had one location per node!</p>
<p>Sometimes, you may have a node (say a product, or a personality) affiliated with multiple locations. Perhaps you have a hammer that's available in three of your company's stores, or a speaker who is available to speak in two locations. When solr 3.x and Drupal 7 encountered this situation, you would either use a single location value in the index (so the second, third, etc. fields weren't indexed or searched), or if you put multiple values into solr's search index using the <code>LatLonType</code>, solr could throw out unexpected results (sometimes combining the closest latitude and closest longitude to a given point, meaning you get strange search results).</p></div></div></div>
  </body>
</html>

