X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Fri, 28 Nov 2014 06:53:39 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Fri, 28 Nov 2014 06:53:39 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Code Drop: Getting Started Testing Drush Commands
Content-Transfer-Encoding: 8bit
Content-Base: https://codedrop.com.au/blog/getting-started-testing-drush-commands
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Code Drop: Getting Started Testing Drush Commands</title>
    <base href="https://codedrop.com.au/blog/getting-started-testing-drush-commands">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p>I've recently been rewriting the Drush Migrate Manifest command for Drupal 8 and it was my first introduction to writing tests for Drush commands. The process was more painless than I had initially imagined it would be, but not without a few caveats along the way.</p>
<h2>Background</h2>
<p>Drush tests use PHPUnit as the test runner and testing framework which offers a kind familiarity to many developers, especially anyone involved in Drupal 8. Drush uses the name "Unish" for its testing namespace and base test classes. I’ve no idea where Unish comes from but here’s a <a href="http://en.wikipedia.org/wiki/Unish">definition</a>?</p>
<h2>Test Skeleton</h2>
<p>Create your test within the tests folder using Lower Camel Case for the naming of both the file and the class name.</p>
<p>
</p></div></div></div>
  </body>
</html>

