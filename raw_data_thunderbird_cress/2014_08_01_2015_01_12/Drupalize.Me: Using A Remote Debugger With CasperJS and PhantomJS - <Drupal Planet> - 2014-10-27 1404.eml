X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Mon, 27 Oct 2014 14:04:01 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Mon, 27 Oct 2014 14:04:01 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Drupalize.Me: Using A Remote Debugger With CasperJS and PhantomJS
Content-Transfer-Encoding: 8bit
Content-Base: https://drupalize.me/blog/201410/using-remote-debugger-casperjs-and-phantomjs
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Drupalize.Me: Using A Remote Debugger With CasperJS and PhantomJS</title>
    <base href="https://drupalize.me/blog/201410/using-remote-debugger-casperjs-and-phantomjs">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden text-content text-secondary"><div class="field-items"><div class="field-item even"><p>Earlier this year fellow Lullabot Juampy wrote about how we've started using CasperJS at Lullabot in order to do regression testing. I haven't had much chance to dig into it until recently, when we decided to implement some CasperJS tests for Drupalize.Me. So far, I'm really enjoying itâ€”except for those occasions where something in my test is simply not working, and I end up spending hours asking CasperJS to take screenshots using console.log(), and trying to figure out what is going on. Fed up with this process I wanted a debugger.</p>
</div></div></div><div id="comment-wrapper-nid-1879"></div>
  </body>
</html>

