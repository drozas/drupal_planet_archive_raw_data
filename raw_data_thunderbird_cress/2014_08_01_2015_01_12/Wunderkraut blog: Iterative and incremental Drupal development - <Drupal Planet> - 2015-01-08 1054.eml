X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Thu, 08 Jan 2015 10:54:33 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Thu, 08 Jan 2015 10:54:33 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Wunderkraut blog: Iterative and incremental Drupal development
Content-Transfer-Encoding: 8bit
Content-Base: http://www.wunderkraut.com/blog/iterative-and-incremental-drupal-development/2015-01-08
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Wunderkraut blog: Iterative and incremental Drupal development</title>
    <base href="http://www.wunderkraut.com/blog/iterative-and-incremental-drupal-development/2015-01-08">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p class="field-ns-blog-post-lead">
    Iterative development process works well for software development in general. Using a process like Scrum can however cause some problems with a high productivity platform like Drupal. With Drupal you already have a working product very early in the process, you tweak the details and in the end have an improved version. With Drupal features are cheap and details are expensive.  </p>
<div class="field-ns-blog-post-body clearfix">
            <div class="field-item even"> <p>We like to experiment with our process and to improve it. With a company full of agile experts, trainers and coaches there are plenty of discussions around the topic. One of the recent ones has been on moving from just one definition of done to having one for each iteration of a feature. This should give us better visibility for progress and provide earlier decision points for the customer.</p><h2>Why do we need this?</h2><ol><li>Make sure we don't do what the customer asks but what the customer needs. It's our job to meet the business need of a customer, we should be able to offer alternative solutions to the customer instead of just going for the most obvious or the "Drupal standard" one.</li><li>Keep better control over the project budget. We are good at delivering the highest priority items first, but not always great at knowing what's good enough. This approach will move the work to the next story before the previous story is implemented perfectly. The goal is to add more clarity on when good is better than perfect.</li><li>Help the team members work together in a more effective way. When we work on different stages of multiple stories simultaneously it's easy to lose track of progress. Having a clear process should help us not to do important steps too late and keep the communication simpler.</li><li>Allow customers more time to react on the primary decisions by pushing detailed decisions to later in the project. When the customer knows what level of detail we are dealing with they should have easier time on deciding how much time they should use on it.</li></ol><p>In the end of the day most of our customers just care about getting the job done in the most efficient way possible. It’s not so much about technology, design or methodology to get there, it’s much more about the results.</p><h2>How should we do it?</h2><p>By combining iterative and incremental process into what I call development waves. It's nothing radically new, just combining many things we already do into a process and documenting it.</p><p><img alt="agile-waves-1.png" class="media-image" height="426" title="agile-waves-1.png" width="822" src="http://www.wunderkraut.com/sites/wunderkraut.com/files/agile-waves-1.png" /></p><p>The basic idea is to approach a project with increments and iterations. Increments will add functionality and iterations will improve functionality. Instead of trying to get a story done-done in a sprint we will have different definitions of done for different iteration tasks. This is intended to help us find better ways of meeting the why of a story, keep the project moving forward faster and allow more innovation during the project.</p><p>The cooperation between team members should also improve with each story being split always to similar tasks based on iterations. We can also use the same methodology for epic stories and tasks.</p><p><img alt="agile-waves-2.png" class="media-image" height="426" title="agile-waves-2.png" width="822" src="http://www.wunderkraut.com/sites/wunderkraut.com/files/agile-waves-2.png" /></p><p>Sprints move through increments and iterations of them in waves. In some cases multiple iterations will be done in a sprint, in some just one. Instead of working to reach the definition of done for a full story the team works to reach definition of done for each iteration of a story. This removes a lot of the extra overhead needed for quality assurance while we are still not 100% sure what the final implementation will look like. When the PO changes her mind or the team figures out a better way of delivering the story less work is wasted.</p><p>To help balance the workload of team members stories are not in sync for their iteration level. One story in a sprint may only have concept level work done on it, another user experience design and third MVP implementation. This will replace the sprint scouting we do today and make the communication around it easier. It should also make progress more visible and estimation of tasks easier when every story is always split to iteration tasks.</p><p></p><p>The goal for any project should not be to complete 100% of the backlog. Usually if that happens time has already been wasted on low value items and the same time would be better spent on either improving the quality of higher value stories or coming up with new ideas.</p><p>When a release of a project is done we have always completed the most valuable stories for that release and also done some scouting for the future. There may be some time wasted with getting started on stories that will not be implemented, but on the other hand we should be able to make incredible savings on other stories by coming up with more effective ways of implementing them.</p><p><img alt="agile-development.png" class="media-image" height="581" title="agile-development.png" width="822" src="http://www.wunderkraut.com/sites/wunderkraut.com/files/agile-development.png" /></p>
<pre>
Image credit: <a href="http://blog.crisp.se/2014/10/08/henrikkniberg/what-is-scrum">Henrik Kniberg, What is Scrum</a></pre>
<p>The approach is to build something visible and useful as early as possible. This is true both for iterations and increments. Everything we build should immediately have some value to it and we should be able to explain that value to the customer at any point.</p><p> </p><p><em>In the next post I'll define different iterations and how to do them.</em></p> </div>
    </div>
  </body>
</html>

