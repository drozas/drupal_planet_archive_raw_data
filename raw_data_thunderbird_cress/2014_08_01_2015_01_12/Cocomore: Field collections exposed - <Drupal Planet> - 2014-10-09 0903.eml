X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Thu, 09 Oct 2014 08:03:33 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Thu, 09 Oct 2014 08:03:33 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Cocomore: Field collections exposed
Content-Transfer-Encoding: 8bit
Content-Base: http://drupal.cocomore.com/blog/field-collections-exposed
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Cocomore: Field collections exposed</title>
    <base href="http://drupal.cocomore.com/blog/field-collections-exposed">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p><em><a href="http://www.drupal.org/project/field_collection" alt="Field collections " title="Field collections ">Field collections</a></em> is a nice <a class="glossary-term" href="http://drupal.cocomore.com/glossary/8#term135"><dfn title="Short form of “community contributed” or “contributed”; said of modules, themes, and other code provided by the community and not included in “core”.">contributed</dfn></a> <a class="glossary-term" href="http://drupal.cocomore.com/glossary/8#term165"><dfn title="A module is “add-on” software (usually PHP and CSS) which extends features and functionality. “Core” modules come with Drupal and are stored in the main “modules” directory, and contributed (contrib) modules come from the Drupal community and are often stored in the sites/all/modules directory or another directory which is not replaced along with the rest of “core” when Drupal is upgraded. All contrib modules available from drupal.org are covered by the same GPL license as Drupal. (auf Englisch: Modul)">module</dfn></a> that extends the default Drupal <a class="glossary-term" href="http://drupal.cocomore.com/glossary/8#term142"><dfn title="In Drupal 7, everything became an “entity”: nodes, users, vocabularies, comments, terms… all different kinds of “entity”. Since entities are “fieldable” (i.e. can have custom fields added to them), this opens up a lot of possibilities for extending Drupal to model complex systems. At this time, development with entities is still new, but we can expect to see a lot more projects which make use of non-node “fieldable” and “exportable” entities.">entity</dfn></a> functionality by creating a new entity field that can be composed by other fields. With this module we solve problems like creating complex entities where we want to store multiple different values into one single field. </p><p><a href="http://drupal.cocomore.com/blog/field-collections-exposed" target="_blank">read more</a></p>
  </body>
</html>

