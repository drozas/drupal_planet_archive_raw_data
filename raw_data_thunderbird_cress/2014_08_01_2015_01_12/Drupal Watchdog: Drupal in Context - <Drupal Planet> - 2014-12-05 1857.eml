X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Fri, 05 Dec 2014 18:57:16 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Fri, 05 Dec 2014 18:57:16 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Drupal Watchdog: Drupal in Context
Content-Transfer-Encoding: 8bit
Content-Base: http://drupalwatchdog.com/volume-4/issue-1/drupal-in-context
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Drupal Watchdog: Drupal in Context</title>
    <base href="http://drupalwatchdog.com/volume-4/issue-1/drupal-in-context">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field--article-edit-printtype field-type-list-text field-label-hidden field--rss">
              Column        </div>
<div class="field field--article-body field-type-text-long field-label-hidden field--rss">
              <p><img src="http://cdn1.drupalwatchdog.com/sites/default/files/field/image/4.1-DrupalInContext.jpg" alt="photo" class="img-responsive img-thumbnail margin-left" width="55%" align="right" />            A funny thing happened in 1991, when the Americans with Disabilities Act started compelling businesses to make their premises more accessible. People discovered that long-handled faucets are easier to turn when your hands are wet; wheelchair ramps enabled parents to bring their strollers inside; and athletes relied on handrails after twisting their ankles during practice. In short, ease of use benefited everybody, not just the targeted population. </p>
<p>            It's a lesson the Drupal community has struggled gamely to learn: consider Drupal 7's extensive (and expensive) user-interface revamp. And yet beginners still find Drupal much harder to use than, say, WordPress. Meanwhile, technologists who are weighing Drupal against its competitors reach for the handrail, find it missing, and assume that this lack of “polish” is more than skin deep.</p>
<p>            Sometimes, they're right.</p>
<h3>'tis a Gift to be Simple</h3>
<p>            If the history of technology teaches us one thing, it's this: Simplicity wins every time. It beats features, security, and price. Examples abound both within and outside of the world of computers: Packaged goods beat out bulk service even as they partly eliminated customer choice, and Twitter dumbed down blogging to become an essential part of digital life. But fighting against the need for simple, reliable tools is quixotic: It's easier and more fun to create new features than to perfect the ones you have.</p>
<p>           Certainly Drupal has long been guilty of this. We've held onto poorly implemented core features, even when their function has diminished and the market has passed them by. The mostly pointless and hard-to-use Actions module is a great example. The disease is evident outside of core, too. Features get more attention than interface bugs in the queues of contributed modules; and five years after its release, the Mac version of Acquia Dev Desktop still can't serve web pages on the standard HTTP port 80, or shut down gracefully when you restart your computer.</p>        </div>
  </body>
</html>

