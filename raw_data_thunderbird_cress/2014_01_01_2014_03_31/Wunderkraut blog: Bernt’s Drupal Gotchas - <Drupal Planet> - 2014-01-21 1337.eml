X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Tue, 21 Jan 2014 13:37:43 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Tue, 21 Jan 2014 13:37:43 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Wunderkraut blog: Bernt’s Drupal Gotchas
Content-Transfer-Encoding: 8bit
Content-Base: http://wunderkraut.com/blog/bernts-drupal-gotchas/2014-01-21
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Wunderkraut blog: Bernt’s Drupal Gotchas</title>
    <base href="http://wunderkraut.com/blog/bernts-drupal-gotchas/2014-01-21">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p class="field-ns-blog-post-lead">
    During my first year of being a full time Drupal developer, I ran into quite a few stumbling blocks. Here are 14 of them that you don&#039;t want to trip over too - whether you are new to Drupal or a seasoned expert.   </p>
<div class="field-ns-blog-post-body clearfix">
            <div class="field-item even"> <p>I have just completed my first year as a full time Drupal developer. It has been an interesting year, I have learned a lot and continued to be impressed as to how productive you can be with Drupal. Time and again I have started a user story thinking it could take days or even weeks, but then finished it by a few clicks of my mouse. I am also very grateful to my awesome colleagues that have patiently pointed me in the right direction more than once.</p><p>There have been some surprises along the way, to a guy that has worked with web development for some ten years before starting with Drupal for real.</p><p>I have made a list of these for myself, titled Drupal gotchas. These are stumble blocks, or counterintuitive things that developers could benefit from knowing about when they meet Drupal for the first time.</p><p>They are not necessarily bugs, it is just nice to know about them in advance.</p><h2>GOTCHA 1: Cache clear all doesn’t</h2><p>Most developers use drush, and we use <code>drush cc all</code> a lot to clear drupal’s caches during development. But sometimes, just sometimes, that doesn’t help. Try logging on to drupal in your browser and clear the cache. Just because .. it would be too easy otherwise? </p><h2>GOTCHA 2: With features module and taxonomy</h2><p>If you on your local env have some taxonomy, user role or permission that is not on the other end, and try to export permissions regarding one that is the newest, there will be lots of SQL errors on the other end.</p><p>Cause: Taxonomy permissions, user roles and permissions are put into feature based on their id numbers from the database, and not the name as you would expect.</p><h2>GOTCHA 3: Reverting Features doesn’t give you a feature in default state</h2><p>Removing a field or field group from a content type? It won't be removed when you do a feature revert on the target.</p><p>This is probably what you want in many cases; having features module delete fields might lead to unwanted data loss.</p><p>When removing fields from a project, you should either do it through an update hook or manually delete them from all environments.</p><h2>GOTCHA 4: Changing date fields</h2><p>Oh, so you have a date field, and you decide that you want to collect the end date? Well, if there is content in the database, sorry it can't be done. It’s not like the project’s requirements will ever change, you know. </p><p>I received a comment from <a href="http://wunderkraut.com/people/olli-erinko">Olli</a> about this one which I think it is important to keep in mind:</p><p class="quote-green">Well, technically, it can be done. It just requires a manual change to the database. And filling in the missing end dates too. So, quite a bit of work instead of a simple field edit in the UI.</p><h2>GOTCHA 5: Entity translation and views</h2><p>If you use entity translation, and it is sort of your first time you are creating a view with this, you should print out <a href="https://drupal.org/comment/6511274#comment-6511274">this comment from Fabsor</a> and hang it on the wall before you start:</p><p class="quote-green">"You can add a relationship to the entity translation table, and from there you can add entity translation: language as your filter. This filters out entities on a specific language."</p><h2>GOTCHA 6: Default permissions in Drupal</h2><p>In a vanilla Drupal installation, without any contributed modules installed, I would really want to be able to let editors add content and edit content, and even publish it on their own, but not delete anything.</p><p>Can you manage that?</p><p>If you grant the “Administer Content”-permission they will also be able to delete content.</p><h2>GOTCHA 7: Machine name confusion</h2><p>So is the machine name main_menu or main-menu? Not that consistent.</p><h2>GOTCHA 8: Ajax forms</h2><p>(From <a href="http://wunderkraut.com/people/cristian-andrei">Cristian</a>)</p><p>This might be trivial but it's good to remember: when doing ajax forms</p><p>"wrapper" =&gt; "form_id" is wrong</p><p>but "wrapper" =&gt; "form-id" is correct</p><h2>GOTCHA 9: Views block deltas turn into md5 hashes</h2><p>Sometimes CSS block views classes turn into md5 hashes, which can be quite annoying in several situations, for instance when writing CSS for a project. Instead of having developer friendly machine names as selectors, you end up with md5 hashes in your CSS.</p><p><a href="https://drupal.org/node/346602#comment-1157029">merlinofchaos’ explanation</a> was spotted by Joonas M:</p><p class="quote-green">This is not a random ID, it's an md5 hash. The reason md5 hash is used here is that it is guaranteed to be 32 characters or less.</p><p class="quote-green">The 'delta' field of a block is limited to 32 characters. However, the only guaranteed unique way of identifying a view and a display takes as many as 65 characters (32 characters for the view name, up to 32 characters for the display id, and a character to separate them, which is a dash). If this combination is 33 characters or longer, an md5 hash is used instead. It was the only solution I could come up with that functioned.</p><p class="quote-green">If you don't like the md5 hash, use shorter view names.</p><h2>GOTCHA 10: Perhaps a bit too many a’ cache clears</h2><p>This I learned in a caching session at drupalcon Prague:</p><p>If you turn on caching of pages for anonymous users, and an anonymous user adds a comment or something, all those caches are cleared.</p><h2>GOTCHA 11: Why aren’t my new strings in the translate strings page?</h2><p>This one is the fantastic <code>t()</code> function GOTCHA. I stumbled on it more than once..</p><p>I found a helpful comment by <a href="https://api.drupal.org/comment/1848#comment-1848">span</a>:</p><p class="quote-green">It should also be noted that the string is not added to the database until it has been displayed in a language that is not the default. It is not enough to only display the string in the default language to be able to translate it via 'Translate interface'.</p><p>And <a href="https://api.drupal.org/comment/14684#comment-14684">Nick_vh</a>:</p><p class="quote-green">"If you're visiting the Default language (mostly English) version of the site the translation table doesn't get populated... t() just output the passed string without accessing the DB. "</p><p>in the API documentation for Drupal 6.</p><p>And just now, in the same documentation for Drupal 7 I saw <a href="https://api.drupal.org/comment/45718#comment-45718">an interesting tip from jonathanpglick</a> on how to get the strings programmatically into your system which I am looking forward to try:</p><p class="quote-green">If you want to get a string into the translate interface programmatically (without displaying the page containing it) you can call:<br /><code>locale($string, &amp;#39;&amp;#39;);</code><br />The empty string as the second argument is important!</p><h2>GOTCHA 12: About blocks and caching</h2><p>So you are making a custom block whose content depends on some variables, for instance <code>$_GET</code> ones, and you have turned on .. role based caching of your block (which is default)?</p><p>Well, then you are in for a surprise - Drupal will cache contents of the block as it is shown to the first visitor with their variables and show it to everybody with the same role.</p><p>In this case a <code>DRUPAL_NO_CACHE</code> directive for the block solved the issue, and I have a mental note about the caching from this point on.</p><h2>GOTCHA 13: Disabling stuff in settings.php not disabling</h2><p>So I had this nice learning experience where I wanted to turn off caching with redis, and instead use the default drupal cache. We had some issues with caching not clearing properly.</p><p>I commented out the redis cache config in in <code>settings.php</code>:</p>
<pre>
;$conf['cache_default_class'] = 'Redis_Cache';
</pre>
<p>But nothing changed! The problem was still there, and yes Drupal was still using redis as cache backend even though there was nothing in the config file to tell it to.</p><p>Then we realised that we had to add</p>
<pre>
$conf['cache_default_class'] = 'DrupalDatabaseCache';
</pre>
<p>into the config file too for it to work. Drupal doesn’t revert to the default state by itself as you might have expected from other config files.</p><h2>GOTCHA 14: Memcached does not cache everything you want</h2><p>This Gotcha is provided by <a href="http://wunderkraut.com/people/ilmari-oranen">Ilmari</a>:</p><p>In memcached, a single cache entry is limited to 1Mb. Memcached itself won’t show up any error if something doesn’t fit in it, it will just act as if there was no cache at all for that entry, which can make a site very slow.</p><p>Cache bins that most often contain entries over 1Mb are those of views. That is why views bins would be the primary item I would/have put in Redis instead of memcached.</p><p>This is a configuration example:</p>
<pre>
# Cache bins. First cache_views, that doesn’t fit in memcached, and takes up to 30-40% CPU time of total when in MySQL. Redis works best.
$conf['cache_class_cache_views'] = 'Redis_Cache';
$conf['cache_class_cache_views_data'] = 'Redis_Cache';
</pre>
<h2>Over to you</h2><p>Phew, that was it. Have you stumbled into another one? Please add it in the comments, so that other people will not have to spend those frustrating hours too!</p> </div>
    </div>
  </body>
</html>

