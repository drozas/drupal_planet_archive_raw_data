X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Mon, 10 Feb 2014 17:19:02 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Mon, 10 Feb 2014 17:19:02 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Steindom LLC: Drupal migrations from HTML pages
Content-Transfer-Encoding: 8bit
Content-Base: http://steindom.com/articles/drupal-migrations-html-pages
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Steindom LLC: Drupal migrations from HTML pages</title>
    <base href="http://steindom.com/articles/drupal-migrations-html-pages">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even"><p>I often use the excellent <a href="https://drupal.org/project/migrate">Migrate</a> suite of modules to import data into Drupal. It's great for getting any type of content into a Drupal node, file, taxonomy term, user, and more. My latest task: importing content from raw HTML into a Drupal node. Not finding any pre-built classes in Migrate to handle this, I built a few simple classes myself.</p>
<!--break--><p>
I'm assuming you already know how to work with Migrate. First, add these classes to your codebase:</p>
<p></p><div class="geshifilter"><div class="php geshifilter-php"><span class="co4">/**<br />
 * Pass an array of URLs to the constructor.<br />
 */</span><br /><span class="kw2">class</span> MigrateListHtml <span class="kw2">extends</span> MigrateList <span class="br0">{</span><br /><br />
  <span class="kw2">protected</span> <span class="re0">$urls</span><span class="sy0">;</span><br /><br />
  <span class="kw2">public</span> <span class="kw2">function</span> __construct<span class="br0">(</span><span class="re0">$urls</span><span class="br0">)</span> <span class="br0">{</span><br />
    parent<span class="sy0">::</span>__construct<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">urls</span> <span class="sy0">=</span> <span class="re0">$urls</span><span class="sy0">;</span><br />
  <span class="br0">}</span><br /><br />
  <span class="kw2">public</span> <span class="kw2">function</span> __toString<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><br />
    <span class="kw1">if</span> <span class="br0">(</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">(</span><span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">urls</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span><br />
      <span class="kw1">return</span> <span class="st_h">''</span><span class="sy0">;</span><br />
    <span class="br0">}</span><br />
    <span class="kw1">return</span> t<span class="br0">(</span><span class="st_h">'!count URLs (such as !first_url)'</span><span class="sy0">,</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">(</span><br />
      <span class="st_h">'!count'</span> <span class="sy0">=&gt;</span> <a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">(</span><span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">urls</span><span class="br0">)</span><span class="sy0">,</span><br />
      <span class="st_h">'!first_url'</span> <span class="sy0">=&gt;</span> <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">urls</span><span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span><span class="sy0">,</span><br />
    <span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span><br />
  <span class="br0">}</span><br /><br />
  <span class="kw2">public</span> <span class="kw2">function</span> getIdList<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><br />
    <span class="kw1">return</span> <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">urls</span><span class="sy0">;</span><br />
  <span class="br0">}</span><br /><br />
  <span class="kw2">public</span> <span class="kw2">function</span> computeCount<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><br />
    <span class="kw1">return</span> <a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">(</span><span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">urls</span><span class="br0">)</span><span class="sy0">;</span><br />
  <span class="br0">}</span><br /><br /><span class="br0">}</span><br /><br /><span class="co4">/**<br />
 * Processes each URL.<br />
 */</span><br /><span class="kw2">class</span> MigrateItemHtml <span class="kw2">extends</span> MigrateItem <span class="br0">{</span><br /><br />
  <span class="kw2">public</span> <span class="kw2">function</span> getItem<span class="br0">(</span><span class="re0">$url</span><span class="br0">)</span> <span class="br0">{</span><br />
    <span class="re0">$return</span> <span class="sy0">=</span> <span class="kw2">new</span> stdClass<span class="sy0">;</span><br /><br />
    <span class="co1">// Get HTML.</span><br />
    <span class="re0">$return</span><span class="sy0">-&gt;</span><span class="me1">html</span> <span class="sy0">=</span> <a href="http://www.php.net/file_get_contents"><span class="kw3">file_get_contents</span></a><span class="br0">(</span><span class="re0">$url</span><span class="br0">)</span><span class="sy0">;</span><br /><br />
    <span class="co1">// Load HTML and setup XPath.</span><br />
    <span class="re0">$return</span><span class="sy0">-&gt;</span><span class="me1">dom</span> <span class="sy0">=</span> <span class="kw2">new</span> DOMDocument<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="sy0">@</span><span class="re0">$return</span><span class="sy0">-&gt;</span><span class="me1">dom</span><span class="sy0">-&gt;</span><span class="me1">loadHtml</span><span class="br0">(</span><span class="re0">$return</span><span class="sy0">-&gt;</span><span class="me1">html</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$return</span><span class="sy0">-&gt;</span><span class="me1">xpath</span> <span class="sy0">=</span> <span class="kw2">new</span> DOMXPath<span class="br0">(</span><span class="re0">$return</span><span class="sy0">-&gt;</span><span class="me1">dom</span><span class="br0">)</span><span class="sy0">;</span><br /><br />
    <span class="kw1">return</span> <span class="re0">$return</span><span class="sy0">;</span><br />
  <span class="br0">}</span><br /><br /><span class="br0">}</span></div></div>
<p>Then, you define your migration class. You'll need to tell MigrateSourceList which fields you'll make available in your prepareRow function (in my example, that's "title" and "body"). You'll have an XPath object in prepareRow() that you can use to parse your HTML.</p>
<p>Here's what it might look like:</p>
<p></p><div class="geshifilter"><div class="php geshifilter-php"><span class="kw2">class</span> MyHtmlMigration <span class="kw2">extends</span> Migration <span class="br0">{</span><br /><br />
  <span class="kw2">public</span> <span class="kw2">function</span> __construct<span class="br0">(</span><a href="http://www.php.net/array"><span class="kw3">array</span></a> <span class="re0">$arguments</span><span class="br0">)</span> <span class="br0">{</span><br />
    parent<span class="sy0">::</span>__construct<span class="br0">(</span><span class="re0">$arguments</span><span class="br0">)</span><span class="sy0">;</span><br /><br />
    <span class="co1">// Define source. Pass array of URLs to MigrateListHtml, and</span><br />
    <span class="co1">// array of fields to MigrateSourceList.</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">source</span> <span class="sy0">=</span> <span class="kw2">new</span> MigrateSourceList<span class="br0">(</span><span class="kw2">new</span> MigrateListHtml<span class="br0">(</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">(</span><br />
      <span class="st_h">'http://mywebsite.com/page1.html'</span><span class="sy0">,</span><br />
      <span class="st_h">'http://mywebsite.com/page2.html'</span><span class="sy0">,</span><br />
      <span class="st_h">'http://mywebsite.com/page3.html'</span><span class="sy0">,</span><br />
    <span class="br0">)</span><span class="br0">)</span><span class="sy0">,</span> <span class="kw2">new</span> MigrateItemHtml<span class="sy0">,</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">(</span><br />
      <span class="st_h">'title'</span> <span class="sy0">=&gt;</span> t<span class="br0">(</span><span class="st_h">'Title'</span><span class="br0">)</span><span class="sy0">,</span><br />
      <span class="st_h">'body'</span> <span class="sy0">=&gt;</span> t<span class="br0">(</span><span class="st_h">'Body'</span><span class="br0">)</span><span class="sy0">,</span><br />
    <span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span><br /><br />
    <span class="co1">// Define destination. I'm creating Page nodes.</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">destination</span> <span class="sy0">=</span> <span class="kw2">new</span> MigrateDestinationNode<span class="br0">(</span><span class="st_h">'page'</span><span class="br0">)</span><span class="sy0">;</span><br /><br />
    <span class="co1">// Define mapping. Maps source URLs to destination node IDs.</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">map</span> <span class="sy0">=</span> <span class="kw2">new</span> MigrateSQLMap<span class="br0">(</span><span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">machineName</span><span class="sy0">,</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">(</span><br />
      <span class="st_h">'sourceid'</span> <span class="sy0">=&gt;</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">(</span><br />
        <span class="st_h">'type'</span> <span class="sy0">=&gt;</span> <span class="st_h">'varchar'</span><span class="sy0">,</span><br />
        <span class="st_h">'length'</span> <span class="sy0">=&gt;</span> <span class="nu0">255</span><span class="sy0">,</span><br />
        <span class="st_h">'not null'</span> <span class="sy0">=&gt;</span> <span class="kw4">TRUE</span><span class="sy0">,</span><br />
      <span class="br0">)</span><span class="sy0">,</span><br />
    <span class="br0">)</span><span class="sy0">,</span> MigrateDestinationNode<span class="sy0">::</span><span class="me2">getKeySchema</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span><br /><br />
    <span class="co1">// Field mappings.</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">addFieldMapping</span><span class="br0">(</span><span class="st_h">'title'</span><span class="sy0">,</span> <span class="st_h">'title'</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">addFieldMapping</span><span class="br0">(</span><span class="st_h">'body'</span><span class="sy0">,</span> <span class="st_h">'body'</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">addFieldMapping</span><span class="br0">(</span><span class="st_h">'body:format'</span><span class="br0">)</span><span class="sy0">-&gt;</span><span class="me1">defaultValue</span><span class="br0">(</span><span class="st_h">'full_html'</span><span class="br0">)</span><span class="sy0">;</span><br />
  <span class="br0">}</span><br /><br />
  <span class="co4">/**<br />
   * $row has "html", "dom", and "xpath" variables.<br />
   * Manually parse $row-&gt;html, or use $row-&gt;xpath to query HTML.<br />
   */</span><br />
  <span class="kw2">public</span> <span class="kw2">function</span> prepareRow<span class="br0">(</span><span class="re0">$row</span><span class="br0">)</span> <span class="br0">{</span><br />
    <span class="kw1">if</span> <span class="br0">(</span>parent<span class="sy0">::</span><span class="me2">prepareRow</span><span class="br0">(</span><span class="re0">$row</span><span class="br0">)</span> <span class="sy0">===</span> <span class="kw4">FALSE</span><span class="br0">)</span> <span class="br0">{</span><br />
      <span class="kw1">return</span> <span class="kw4">FALSE</span><span class="sy0">;</span><br />
    <span class="br0">}</span><br /><br />
    <span class="co1">// Get title from first H1 tag.</span><br />
    <span class="re0">$list</span> <span class="sy0">=</span> <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">xpath</span><span class="sy0">-&gt;</span><span class="me1">query</span><span class="br0">(</span><span class="st_h">'//h1'</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">title</span> <span class="sy0">=</span> <span class="re0">$list</span><span class="sy0">-&gt;</span><span class="me1">length</span> <span class="sy0">&gt;</span> <span class="nu0">0</span> ? <span class="re0">$list</span><span class="sy0">-&gt;</span><span class="me1">item</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">-&gt;</span><span class="me1">nodeValue</span> <span class="sy0">:</span> <span class="st_h">''</span><span class="sy0">;</span><br /><br />
    <span class="co1">// Get content for body (outer html of DIV).</span><br />
    <span class="re0">$list</span> <span class="sy0">=</span> <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">xpath</span><span class="sy0">-&gt;</span><span class="me1">query</span><span class="br0">(</span><span class="st_h">'//div[@id="some-id"]'</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">body</span> <span class="sy0">=</span> <span class="st_h">''</span><span class="sy0">;</span><br />
    <span class="kw1">if</span> <span class="br0">(</span><span class="re0">$list</span><span class="sy0">-&gt;</span><span class="me1">length</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span> <span class="br0">{</span><br />
      <span class="re0">$node</span> <span class="sy0">=</span> <span class="re0">$list</span><span class="sy0">-&gt;</span><span class="me1">item</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span><br />
      <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">body</span> <span class="sy0">=</span> <span class="re0">$node</span><span class="sy0">-&gt;</span><span class="me1">ownerDocument</span><span class="sy0">-&gt;</span><span class="me1">saveHTML</span><span class="br0">(</span><span class="re0">$node</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="br0">}</span><br /><br />
    <span class="co1">// Or, get content using inner html method.</span><br />
    <span class="re0">$list</span> <span class="sy0">=</span> <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">xpath</span><span class="sy0">-&gt;</span><span class="me1">query</span><span class="br0">(</span><span class="st_h">'//body'</span><span class="br0">)</span><span class="sy0">;</span><br />
    <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">body</span> <span class="sy0">=</span> <span class="st_h">''</span><span class="sy0">;</span><br />
    <span class="kw1">if</span> <span class="br0">(</span><span class="re0">$list</span><span class="sy0">-&gt;</span><span class="me1">length</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span> <span class="br0">{</span><br />
      <span class="kw1">foreach</span> <span class="br0">(</span><span class="re0">$list</span><span class="sy0">-&gt;</span><span class="me1">item</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">-&gt;</span><span class="me1">childNodes</span> <span class="kw1">as</span> <span class="re0">$child</span><span class="br0">)</span> <span class="br0">{</span><br />
        <span class="re0">$row</span><span class="sy0">-&gt;</span><span class="me1">body</span> <span class="sy0">.=</span> <span class="re0">$child</span><span class="sy0">-&gt;</span><span class="me1">ownerDocument</span><span class="sy0">-&gt;</span><span class="me1">saveHTML</span><span class="br0">(</span><span class="re0">$child</span><span class="br0">)</span><span class="sy0">;</span><br />
      <span class="br0">}</span><br />
    <span class="br0">}</span><br />
  <span class="br0">}</span><br /><br /><span class="br0">}</span></div></div>
<p>That's it! You may need to use cURL if file_get_contents() doesn't give you enough flexibility (such as handling authentication to your URLs).</p>
</div></div></div><div class="field field-name-submitted-by field-type-ds field-label-hidden"><div class="field-items"><div class="field-item even">Submitted by <span class="username">Joel Stein</span> on February 10, 2014.</div></div></div><div class="field field-name-field-article-tags field-type-taxonomy-term-reference field-label-inline clearfix"><div class="field-label">Tags:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/tags/drupal">Drupal</a>, <a href="/tags/drupal-planet">Drupal Planet</a>, <a href="/tags/php">PHP</a></div></div></div>
  </body>
</html>

