X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Wed, 12 Mar 2014 13:40:49 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Wed, 12 Mar 2014 13:40:49 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Microserve: When to use $query->fetchAll() (hint: it's optional)
Content-Transfer-Encoding: 8bit
Content-Base: http://www.microserveltd.co.uk/blogs/drupal-development/when-use-query-fetchall-hint-its-optional
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Microserve: When to use $query->fetchAll() (hint: it's optional)</title>
    <base href="http://www.microserveltd.co.uk/blogs/drupal-development/when-use-query-fetchall-hint-its-optional">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"> <p>Something that has come up on one of our projects recently is when to use <span class="geshifilter"><code class="php geshifilter-php">fetchAll<span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span> or equivalents like <span class="geshifilter"><code class="php geshifilter-php">fetchAllAssoc<span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span>.</p>

<p>When writing a <a href="https://api.drupal.org/api/drupal/includes!database!database.inc/function/db_query/7">db_query()</a> or <a href="https://api.drupal.org/api/drupal/includes!database!database.inc/function/db_select/7">db_select()</a> query, you don't always need to use <span class="geshifilter"><code class="php geshifilter-php"><span style="color: #000088;">$query</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">fetchAll</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span> or <span class="geshifilter"><code class="php geshifilter-php"><span style="color: #000088;">$query</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">fetchAllAssoc</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span> to retrieve the result set; it's optional.</p>

<p>Database queries in Drupal 7 are iterator objects, so you can treat them like an array and loop over the results with <span class="geshifilter"><code class="php geshifilter-php"><span style="color: #b1b100;">foreach</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span>. If you're going to do any processing on the results, it'll be quicker and use much less memory this way.</p>

<p>So for example, this will still work, note the lack of <span class="geshifilter"><code class="php geshifilter-php">fetchAll<span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span>:</p>
<div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br /></span><span style="color: #FF8000">// Build and run the query.<br /></span><span style="color: #0000BB">$results </span><span style="color: #007700">= </span><span style="color: #0000BB">db_select</span><span style="color: #007700">(</span><span style="color: #DD0000">'node'</span><span style="color: #007700">, </span><span style="color: #DD0000">'n'</span><span style="color: #007700">)<br />           -&gt;</span><span style="color: #0000BB">fields</span><span style="color: #007700">(</span><span style="color: #DD0000">'n'</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'nid'</span><span style="color: #007700">, </span><span style="color: #DD0000">'title'</span><span style="color: #007700">))<br />           -&gt;</span><span style="color: #0000BB">condition</span><span style="color: #007700">(</span><span style="color: #DD0000">'status'</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #DD0000">'!='</span><span style="color: #007700">)<br />           -&gt;</span><span style="color: #0000BB">execute</span><span style="color: #007700">();<br /><br /></span><span style="color: #0000BB">$nodes </span><span style="color: #007700">= array()<br /></span><span style="color: #FF8000">// We can use a foreach loop on the $results object.<br /></span><span style="color: #007700">foreach (</span><span style="color: #0000BB">$results </span><span style="color: #007700">as </span><span style="color: #0000BB">$n</span><span style="color: #007700">) {<br />  </span><span style="color: #FF8000">// Each $n is an object.<br />  </span><span style="color: #0000BB">$nodes</span><span style="color: #007700">[</span><span style="color: #0000BB">$n</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">nid</span><span style="color: #007700">] = </span><span style="color: #0000BB">$n</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">title</span><span style="color: #007700">;<br />}<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div>
<br /><p>If you need the result as an array, you can use <span class="geshifilter"><code class="php geshifilter-php"><span style="color: #000088;">$results</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">fetchAssoc</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span> to retrieve one item at a time:</p>
<div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br /></span><span style="color: #FF8000">// Build and run the query.<br /></span><span style="color: #0000BB">$results </span><span style="color: #007700">= </span><span style="color: #0000BB">db_select</span><span style="color: #007700">(</span><span style="color: #DD0000">'node'</span><span style="color: #007700">, </span><span style="color: #DD0000">'n'</span><span style="color: #007700">)<br />           -&gt;</span><span style="color: #0000BB">fields</span><span style="color: #007700">(</span><span style="color: #DD0000">'n'</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'nid'</span><span style="color: #007700">, </span><span style="color: #DD0000">'title'</span><span style="color: #007700">))<br />           -&gt;</span><span style="color: #0000BB">condition</span><span style="color: #007700">(</span><span style="color: #DD0000">'status'</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #DD0000">'!='</span><span style="color: #007700">)<br />           -&gt;</span><span style="color: #0000BB">execute</span><span style="color: #007700">();<br /><br /></span><span style="color: #0000BB">$nodes </span><span style="color: #007700">= array()<br /></span><span style="color: #FF8000">// We can use a foreach loop on the $results object.<br /></span><span style="color: #007700">while (</span><span style="color: #0000BB">$n </span><span style="color: #007700">= </span><span style="color: #0000BB">$results</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">fetchAssoc</span><span style="color: #007700">()) {<br />  </span><span style="color: #FF8000">// Each $n is an object.<br />  </span><span style="color: #0000BB">$nodes</span><span style="color: #007700">[</span><span style="color: #0000BB">$n</span><span style="color: #007700">[</span><span style="color: #DD0000">'nid'</span><span style="color: #007700">]] = </span><span style="color: #0000BB">$n</span><span style="color: #007700">[</span><span style="color: #DD0000">'title'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div>
<br /><p>One common use-case for using <span class="geshifilter"><code class="php geshifilter-php">fetchAll<span style="color: #009900;">(</span><span style="color: #009900;">)</span></code></span> is so you can use <span class="geshifilter"><code class="php geshifilter-php"><a href="http://www.php.net/count"><span style="color: #990000;">count</span></a><span style="color: #009900;">(</span><span style="color: #000088;">$results</span><span style="color: #009900;">)</span></code></span> to find out how many items were returned by the query. To get around this, you can use a count query instead. So:</p>
<div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br /></span><span style="color: #FF8000">// Create the query, but don't execute it yet.<br /></span><span style="color: #0000BB">$query </span><span style="color: #007700">= </span><span style="color: #0000BB">db_select</span><span style="color: #007700">(</span><span style="color: #DD0000">'node'</span><span style="color: #007700">, </span><span style="color: #DD0000">'n'</span><span style="color: #007700">)<br />         -&gt;</span><span style="color: #0000BB">fields</span><span style="color: #007700">(</span><span style="color: #DD0000">'n'</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'nid'</span><span style="color: #007700">, </span><span style="color: #DD0000">'title'</span><span style="color: #007700">))<br />         -&gt;</span><span style="color: #0000BB">condition</span><span style="color: #007700">(</span><span style="color: #DD0000">'status'</span><span style="color: #007700">, </span><span style="color: #0000BB">0</span><span style="color: #007700">, </span><span style="color: #DD0000">'!='</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This runs a COUNT(*) query to count the number of results.<br /></span><span style="color: #0000BB">$count </span><span style="color: #007700">= </span><span style="color: #0000BB">$query</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">countQuery</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">execute</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">fetchField</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">// Now run the original query and return the result set.<br /></span><span style="color: #0000BB">$results </span><span style="color: #007700">= </span><span style="color: #0000BB">$query</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">execute</span><span style="color: #007700">();<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div>
<br /><p>More details can be found in the <a href="https://api.drupal.org/api/drupal/includes!database!database.inc/interface/DatabaseStatementInterface/7">DatabaseStatementInterface</a> API documentation, or in the PHP <a href="http://www.php.net/manual/en/class.pdostatement.php">PDO</a> manual. </p></div></div></div>
  </body>
</html>

