X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Tue, 19 Nov 2013 14:30:41 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Tue, 19 Nov 2013 14:30:41 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Acquia: Battleplan for Search & Solr in Drupal 8
Content-Transfer-Encoding: 8bit
Content-Base: https://www.acquia.com/blog/battleplan-search-solr-drupal-8
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Acquia: Battleplan for Search & Solr in Drupal 8</title>
    <base href="https://www.acquia.com/blog/battleplan-search-solr-drupal-8">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden">
    <div class="field-items">
          <div property="content:encoded" class="field-item even"><h3>tl;dr</h3>
<p>    <strong>Contrib Search maintainers are committed to make Drupal 8 kick ass with Search API.</strong></p>
<p>    Search is a massively cool technology spectrum with loads of really tough problems such as language stemming, delivering search as a site scales and helping customers actually find what they want. However, solving these is not so easy. Let’s look at the history of Search and Solr in Drupal.</p></div>
      </div>
</div>
<span property="dc:title" content="Battleplan for Search &amp; Solr in Drupal 8" class="rdf-meta"></span>
  </body>
</html>

