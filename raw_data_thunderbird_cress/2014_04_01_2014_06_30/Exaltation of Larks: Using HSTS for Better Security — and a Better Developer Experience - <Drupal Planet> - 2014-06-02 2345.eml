X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Mon, 02 Jun 2014 22:45:25 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Mon, 02 Jun 2014 22:45:25 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Exaltation of Larks: Using HSTS for Better Security — and a Better Developer Experience
Content-Transfer-Encoding: 8bit
Content-Base: https://www.larks.la/articles/using-hsts-for-better-security-and-a-better-developer-experience
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Exaltation of Larks: Using HSTS for Better Security — and a Better Developer Experience</title>
    <base href="https://www.larks.la/articles/using-hsts-for-better-security-and-a-better-developer-experience">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <p>You&#8217;ve probably come across this situation before. When visiting a certain site, you see a browser warning that the website is using mixed content &#8212; both <span class="caps">HTTP</span> and <span class="caps">HTTPS</span>&nbsp;together. </p>
<p>Avoiding mixed content is nothing new to some web developers, but read on if you&#8217;re looking for a quick fix to prevent both mixed content warnings and <a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery"><span class="caps">CSRF</span></a> attacks, which are the underlying reason why browsers have those warnings in the first&nbsp;place.</p>
<h2>Introducing <span class="caps">HSTS</span> <a name="introducing-hsts"></a></h2>
<p><a href="https://www.larks.la/articles/using-hsts-for-better-security-and-a-better-developer-experience" target="_blank">read more</a></p>
  </body>
</html>

