X-Mozilla-Status: 0041
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Thu, 01 May 2014 20:25:01 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Thu, 01 May 2014 20:25:01 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: S. M. Bjørklund: How to programmatically create a field in Drupal 7
Content-Transfer-Encoding: 8bit
Content-Base: https://smbjorklund.no/how-programmatically-create-field-drupal-7
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>S. M. Bjørklund: How to programmatically create a field in Drupal 7</title>
    <base href="https://smbjorklund.no/how-programmatically-create-field-drupal-7">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-taxonomy-vocabulary-1 field-type-taxonomy-term-reference field-label-inline clearfix"><h3 class="field-label">Tags: </h3><ul class="links inline"><li class="taxonomy-term-reference-0"><a href="/tags/drupal" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Drupal</a></li><li class="taxonomy-term-reference-1"><a href="/tags/fieldapi" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">field_API</a></li><li class="taxonomy-term-reference-2"><a href="/tags/field" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">field</a></li><li class="taxonomy-term-reference-3"><a href="/tags/php" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">PHP</a></li><li class="taxonomy-term-reference-4"><a href="/tags/code" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">code</a></li><li class="taxonomy-term-reference-5"><a href="/tags/planet-drupal" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Planet Drupal</a></li></ul></div><div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p>Ever had a site not controlled by the <a href="https://drupal.org/project/features">features module</a> or felt that using it, add to much administrative overhead? Or you simply want to learn how to use Drupal <a href="https://api.drupal.org/api/drupal/modules!field!field.module/group/field/7">field API</a>? This is for you.</p>
<p>In this example I will try to keep the amount of code to the very minimum. Putting too much features into a example have a tendency to put some people off with the amount of code it create. The example will not explain how you create new field types, but rather use one existing provided by Drupal core.</p>
<!--break--><h2>Scope of example</h2>
<ul><li>Create a custom module named demo_field.</li>
<li>Enabling the module create a text field and add it to a content type named article.</li>
<li>Disable it remove the field from the content type and delete the field.</li>
</ul><h2>demo_field module</h2>
<p>Not testing for exiting field name or that the node type (story) actually exist. Make sure field name does not collide and that you have a content type named story. If not, alter the code to match your installation.</p>
<h3>demo_field.info</h3>
<p><div class="codeblock"><code>name = demo field<br />core = 7.x<br />dependencies[] = field</code></div></p>
<h3>demo_field.module</h3>
<p><div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br />?&gt;</span></span></code></div><br />
That's right, it is a empty module. The real code is found in til file module_name.install.</p>
<h3>demo_field.install</h3>
<p><div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br /><br /></span><span style="color: #007700">/&lt;</span><span style="color: #0000BB">strong</span><span style="color: #007700">&gt;<br /> * Implements </span><span style="color: #0000BB">hook_enable</span><span style="color: #007700">().<br /> *<br /> * </span><span style="color: #0000BB">Create a field</span><span style="color: #007700">. </span><span style="color: #0000BB">Fields can be created without any needs to attach them to<br /> </span><span style="color: #007700">* </span><span style="color: #0000BB">entities</span><span style="color: #007700">.<br /> */<br />function </span><span style="color: #0000BB">demo_field_enable</span><span style="color: #007700">() {<br />&nbsp; </span><span style="color: #0000BB">$field </span><span style="color: #007700">= array(<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'field_name' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'demo_field'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'type' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'text'</span><span style="color: #007700">,<br />&nbsp; );<br />&nbsp; </span><span style="color: #0000BB">field_create_field</span><span style="color: #007700">(</span><span style="color: #0000BB">$field</span><span style="color: #007700">);<br /><br />&nbsp; /&lt;/</span><span style="color: #0000BB">strong</span><span style="color: #007700">&gt;<br />&nbsp;&nbsp; * </span><span style="color: #0000BB">Bind field to a entity bundle</span><span style="color: #007700">.<br />&nbsp;&nbsp; */<br />&nbsp; </span><span style="color: #0000BB">$instance </span><span style="color: #007700">= array(<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'field_name' </span><span style="color: #007700">=&gt; </span><span style="color: #0000BB">$field</span><span style="color: #007700">[</span><span style="color: #DD0000">'field_name'</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'entity_type' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'node'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'bundle' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'article'</span><span style="color: #007700">,<br />&nbsp; );<br />&nbsp; </span><span style="color: #0000BB">field_create_instance</span><span style="color: #007700">(</span><span style="color: #0000BB">$instance</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">/**<br /> * Implements hook_disable().<br /> *<br /> * Remove field from node bundle (content type) and then delete the field.<br /> */<br /></span><span style="color: #007700">function </span><span style="color: #0000BB">demo_field_disable</span><span style="color: #007700">() {<br />&nbsp; </span><span style="color: #0000BB">$instance </span><span style="color: #007700">= array(<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'field_name' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'demo_field'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'entity_type' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'node'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp; </span><span style="color: #DD0000">'bundle' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'article'</span><span style="color: #007700">,<br />&nbsp; );<br />&nbsp; </span><span style="color: #0000BB">field_delete_instance</span><span style="color: #007700">(</span><span style="color: #0000BB">$instance</span><span style="color: #007700">);<br />&nbsp; </span><span style="color: #0000BB">field_delete_field</span><span style="color: #007700">(</span><span style="color: #0000BB">$instance</span><span style="color: #007700">[</span><span style="color: #DD0000">'field_name'</span><span style="color: #007700">]);<br />&nbsp; print </span><span style="color: #DD0000">'Removed ' </span><span style="color: #007700">. </span><span style="color: #0000BB">$instance</span><span style="color: #007700">[</span><span style="color: #DD0000">'field_name'</span><span style="color: #007700">] . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div></p>
<p>This is all code you need to create a field, add it to a content type. Sharing the field with another content type will only require that we add a single line.</p>
<h2>Code breakdown</h2>
<p>First thing we do is to define a field:<br />
<div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br />$field </span><span style="color: #007700">= array(<br />&nbsp; </span><span style="color: #DD0000">'field_name' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'demo_field'</span><span style="color: #007700">,<br />&nbsp; </span><span style="color: #DD0000">'type' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'text'</span><span style="color: #007700">,<br />);<br /></span><span style="color: #0000BB">field_create_field</span><span style="color: #007700">(</span><span style="color: #0000BB">$field</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div></p>
<p>The very minimum you need to pass to <a href="https://api.drupal.org/api/drupal/modules!field!field.crud.inc/function/field_create_field/7">field_create_field()</a> is a name for the field and the type of field. Created fields in Drupal does not have to added to a content type (entity) right away though when you create them through the UI you do not have a choice. The field API on the other hand give you all the flexibility you need. The text field get Drupal default setting since for the sake of simplicity choose to omit any field settings.</p>
<p><div class="codeblock"><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br />$instance </span><span style="color: #007700">= array(<br />&nbsp; </span><span style="color: #DD0000">'field_name' </span><span style="color: #007700">=&gt; </span><span style="color: #0000BB">$field</span><span style="color: #007700">[</span><span style="color: #DD0000">'field_name'</span><span style="color: #007700">],<br />&nbsp; </span><span style="color: #DD0000">'entity_type' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'node'</span><span style="color: #007700">,<br />&nbsp; </span><span style="color: #DD0000">'bundle' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'article'</span><span style="color: #007700">,<br />);<br /></span><span style="color: #0000BB">field_create_instance</span><span style="color: #007700">(</span><span style="color: #0000BB">$instance</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span></span></code></div></p>
<p>This add the field to the node. The very minimum you need to pass to <a href="https://api.drupal.org/api/drupal/modules!field!field.crud.inc/function/field_create_instance/7">field_create_instance()</a> is the name of the field you plan to attach, the entity type, and the name of the bundle.
</p>
<h2>Grab the demo_field code</h2>
<p>Code can be found in <a href="https://github.com/steinmb/demo_field">my github repo</a>.</p>
</div></div></div>
  </body>
</html>

