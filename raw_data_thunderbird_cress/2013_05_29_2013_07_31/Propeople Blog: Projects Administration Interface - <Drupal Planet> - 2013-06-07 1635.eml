X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                
Date: Fri, 07 Jun 2013 15:35:00 +0000
Message-Id: <http://drupal.org/planet/rss.xml#Fri, 07 Jun 2013 15:35:00 +0000@localhost.localdomain>
From: <Drupal Planet>
MIME-Version: 1.0
Subject: Propeople Blog: Projects Administration Interface
Content-Transfer-Encoding: 8bit
Content-Base: http://wearepropeople.com/blog/projects-administration-interface
Content-Type: text/html; charset=UTF-8

<html>
  <head>
    <title>Propeople Blog: Projects Administration Interface</title>
    <base href="http://wearepropeople.com/blog/projects-administration-interface">
  </head>
  <body id="msgFeedSummaryBody" selected="false">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"> <p>Working in a <a href="http://www.wearepropeople.com">Drupal Agency</a>, during everyday web development activity, very often you need to create new Drupal projects to test different <a href="/blog/essential-drupal-modules">Drupal modules</a> and functionalities.</p><p>The installation of a new project takes time and knowledge not only of the operating system, but also specific to the software specialized on the server part like LAMP on GNU/Linux, WAMP on Windows, MAMP on Mac OS, etc.</p><h4>What is a [WLM]AMP stack?</h4><p>The name “*AMP stack” comes from the abbreviation of software names, the first letter signifying the operating system it runs on: W - Windows, L - GNU/Linux, M - Mac OS. The next three letters represent the specialized software: A - Apache, M - MySQL, P - PHP. All of these applications (stack - a set of apps) work on the server part. While there are also other types of stacks, we will only be discussing these.</p><h4>Setting up a new project</h4><p>In the example below I will explain how to set up a project in GNU/Linux, specifically Ubuntu 13.04, with the LAMP stack installed and configured for work. Usually I go through the following steps:</p><ul><li>Copy the project in the “wwwroot” folder of the LAMP stack, usually the path is “/var/www/”</li><li>Add a new virtual host. Usually in “/etc/apache/sites-available”</li><li>Execute the command that adds a virtual host “a2ensite [name_of_file]”</li><li>Restart the Apache server</li><li>Create a new database (we will not describe here how to add a new user and grant him permissions to the database, we’ll use the default “root” user)</li><li>Accessing the address of the new website we can install the project, which will in turn generate the content of the database in case the project</li></ul><p><span style="line-height: 1.538em;">Performing all these actions we prepare a stable work environment for the Drupal developer.</span></p><h4>Use cases</h4><p>Let’s say we have to set up an existing project - we have to go through the following steps: checkout the sources from the repository and copy them into “wwwroot” on Apache, upload and install the database for the project, add a new record in the hosts file with the address of the project (domain), add the virtual host for the project, activate the virtual host, restart the Apache server. In the end, we will have this project for further development.</p><p>There are cases when we have to work with a generic module or a patch to a contrib module and we need to test the module/patch both in our work environment (existent project) and in a new Drupal instance (new project), in order to find the irregularities and eliminate them, to be sure that the specific module/patch will work in any conditions.</p><p>It’s another case when we work in a team and the project is versioned (git), with groups of developers working on different branches. Here we will need more than one Drupal environment (existent or new project), which implies going through the steps above more than once.</p><p>To make this work easier there are some sets of applications that can help us in managing servers and projects:</p><p><a href="http://www.webmin.com/" rel="nofollow" style="font-size: 1.154em; font-weight: bold; line-height: 1.538em;" target="blank">Webmin</a></p><p>Webmin is a web-based interface for system administration for Unix. Using any modern web browser, you can setup user accounts, Apache, DNS, file sharing and much more.</p><p><a href="http://drupal.org/project/drush" rel="nofollow" style="font-size: 1.154em; font-weight: bold; line-height: 1.538em;" target="blank">Drush</a></p><p>Drush is a command line shell and scripting interface for Drupal, a veritable Swiss Army knife designed to make life easier for those of us who spend some of our working hours hacking away at the command prompt.</p><p><a href="http://www.vagrantup.com/" rel="nofollow" style="font-size: 1.154em; font-weight: bold; line-height: 1.538em;" target="blank">Vagrant</a></p><p>Vagrant provides easy to configure, reproducible, and portable work environments built on top of industry-standard technology and controlled by a single consistent workflow to help maximize the productivity and flexibility of you and your team.</p><p><a href="http://www.aegirproject.org/" rel="nofollow" style="font-size: 1.154em; font-weight: bold; line-height: 1.538em;" target="blank">Aegir</a></p><p>The Aegir hosting system allows developers and site administrators to automate many of the common tasks associated with deploying and managing large websites. Aegir makes it easy to install, upgrade, deploy, and backup an entire network of Drupal sites.</p><p><span style="font-size: 1.154em; font-weight: bold; line-height: 1.538em;">Custom scripts</span></p><p><span style="line-height: 1.538em;">For me, personally, it’s an issue that occurs often - creating new or existing projects to test modules/patches or work in a team on different branches of a project. In everyday work I use Drush for downloading, synchronizing and cleaning the cache. Applications like </span><a href="/blog/complex-development-environment-simplified-vagrant" style="line-height: 1.538em;">Vagrant</a><span style="line-height: 1.538em;"> and Aegir that work with project management imply major handling to set up projects and also require resources from the computer, such tasks sometimes becoming more difficult than going through the steps above.</span></p><p>So, I decided to create a system that would be flexible in adding and managing Drupal projects, taking care of adding and modifying Apache, hosts files, creating a database and users, integrate Drush, with a fast and extensible interface for managing the projects. This is how the Project Application Interface got started.</p><p>Right now, it’s in the <a href="http://drupal.org/sandbox/vladimir-m/1969902" rel="nofollow" target="blank">drupal.org sandbox</a>, still requiring optimizations and improvements. It’s still in development, so you’re welcome to contribute. I hope to add more functions to this PAI, so follow the <a href="/blog">blog</a> or our Social Media accounts (<a href="http://twitter.com/paulsanduleac" rel="nofollow" target="blank">Twitter</a>, <a href="http://facebook.com/propeople" rel="nofollow" target="blank">Facebook</a>) for more details about the evolution of the project.</p> </div></div></div><div class="control-group form-type-item form-item">
  <label class="control-label">Language </label>
<div class="controls"> English
</div></div>
<div id="comment-wrapper"></div><div class="field field-name-field-tags field-type-taxonomy-term-reference field-label-above"><div class="field-label">Tags:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/tags/drupal" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Drupal</a></div><div class="field-item odd"><a href="/tags/development" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">Development</a></div></div></div><div class="field field-name-field-drupal-planet field-type-taxonomy-term-reference field-label-above"><div class="field-label">Check this option to include this post in Planet Drupal aggregator:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="/drupal/planet" typeof="skos:Concept" property="rdfs:label skos:prefLabel" datatype="">planet</a></div></div></div>
  </body>
</html>

